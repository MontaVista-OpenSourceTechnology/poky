From 063c511bd79281f33fd33f0964541a73511b9e2b Mon Sep 17 00:00:00 2001
From: Alan Modra <amodra@gmail.com>
Date: Wed, 9 Oct 2019 00:07:29 +1030
Subject: [PATCH] PR25078, stack overflow in function find_abstract_instance

PR 25078
* dwarf2.c (find_abstract_instance): Delete orig_info_ptr, add
recur_count.  Error on recur_count reaching 100 rather than
info_ptr matching orig_info_ptr.  Adjust calls.

Upstream-Status: Backport [https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=063c511bd79281f33fd33f0964541a73511b9e2b]
CVE: CVE-2019-17450
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 bfd/dwarf2.c | 23 +++++++++++------------
 1 file changed, 11 insertions(+), 12 deletions(-)

diff --git a/bfd/dwarf2.c b/bfd/dwarf2.c
index f3ce75ebe40..a994b064712 100644
--- a/bfd/dwarf2.c
+++ b/bfd/dwarf2.c
@@ -2808,8 +2808,8 @@ lookup_symbol_in_variable_table (struct comp_unit *unit,
 
 static bfd_boolean
 find_abstract_instance_name (struct comp_unit *unit,
-			     bfd_byte *orig_info_ptr,
 			     struct attribute *attr_ptr,
+                             unsigned int recur_count,
 			     const char **pname,
 			     bfd_boolean *is_linkage)
 {
@@ -2822,6 +2822,14 @@ find_abstract_instance_name (struct comp_unit *unit,
   struct attribute attr;
   const char *name = NULL;
 
+  if (recur_count == 100)
+    {
+      _bfd_error_handler
+       (_("DWARF error: abstract instance recursion detected"));
+      bfd_set_error (bfd_error_bad_value);
+      return FALSE;
+    }
+
   /* DW_FORM_ref_addr can reference an entry in a different CU. It
      is an offset from the .debug_info section, not the current CU.  */
   if (attr_ptr->form == DW_FORM_ref_addr)
@@ -2905,15 +2913,6 @@ find_abstract_instance_name (struct comp_unit *unit,
 					 info_ptr, info_ptr_end);
 	      if (info_ptr == NULL)
 		break;
-	      /* It doesn't ever make sense for DW_AT_specification to
-		 refer to the same DIE.  Stop simple recursion.  */
-	      if (info_ptr == orig_info_ptr)
-		{
-		  _bfd_error_handler
-		    (_("Dwarf Error: Abstract instance recursion detected."));
-		  bfd_set_error (bfd_error_bad_value);
-		  return FALSE;
-		}
 	      switch (attr.name)
 		{
 		case DW_AT_name:
@@ -2927,7 +2926,7 @@ find_abstract_instance_name (struct comp_unit *unit,
 		    }
 		  break;
 		case DW_AT_specification:
-		  if (!find_abstract_instance_name (unit, info_ptr, &attr,
+		  if (!find_abstract_instance_name (unit, &attr, recur_count + 1,
 						    pname, is_linkage))
 		    return FALSE;
 		  break;
@@ -3133,7 +3132,7 @@ scan_unit_for_symbols (struct comp_unit *unit)
 
 		case DW_AT_abstract_origin:
 		case DW_AT_specification:
-		  if (!find_abstract_instance_name (unit, info_ptr, &attr,
+		  if (!find_abstract_instance_name (unit, &attr, 0,
 						    &func->name,
 						    &func->is_linkage))
 		    goto fail;
-- 
2.18.2

