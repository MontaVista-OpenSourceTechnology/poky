From dc078f630aaf14decdf67fa07e6bdd53bed56971 Mon Sep 17 00:00:00 2001
From: Markus Koschany <apo@debian.org>
Date: Wed, 1 Sep 2021 12:42:39 +0200
Subject: [PATCH 3/7] CVE-2021-3527

The g_autofree macro is not available in Stretch hence it was not used
in this patch. Even with g_autofree "unbound alllocation is still there"
according to
https://lists.nongnu.org/archive/html/qemu-devel/2021-05/msg01446.html

However the size limit patch has been backported which should protect against
excessive transfer requests and thus a denial-of-service.

Bug-Debian: https://bugs.debian.org/cgi-bin/988157
Origin: https://lists.nongnu.org/archive/html/qemu-devel/2021-05/msg01373.html

Upstream-status: Backport
CVE: CVE-2021-3527
Signed-off-by: Milan Shah <mshah@mvista.com>
---
 hw/usb/combined-packet.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/hw/usb/combined-packet.c b/hw/usb/combined-packet.c
index 48cac87..2eb9e87 100644
--- a/hw/usb/combined-packet.c
+++ b/hw/usb/combined-packet.c
@@ -25,6 +25,8 @@
 #include "qemu/iov.h"
 #include "trace.h"
 
+#define MiB     (INT64_C(1) << 20)
+
 static void usb_combined_packet_add(USBCombinedPacket *combined, USBPacket *p)
 {
     qemu_iovec_concat(&combined->iov, &p->iov, 0, p->iov.size);
@@ -171,7 +173,9 @@ void usb_ep_combine_input_packets(USBEndpoint *ep)
         if ((p->iov.size % ep->max_packet_size) != 0 || !p->short_not_ok ||
                 next == NULL ||
                 /* Work around for Linux usbfs bulk splitting + migration */
-                (totalsize == 16348 && p->int_req)) {
+                (totalsize == 16348 && p->int_req) ||
+                /* Next package may grow combined package over 1MiB */
+                totalsize > 1 * MiB - ep->max_packet_size) {
             usb_device_handle_data(ep->dev, first);
             assert(first->status == USB_RET_ASYNC);
             if (first->combined) {
-- 
2.7.4

