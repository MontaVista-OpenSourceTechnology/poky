From 7d0fefdf81f5973334c344f6b8e1896c309dff66 Mon Sep 17 00:00:00 2001
From: Akihiko Odaki <akihiko.odaki@daynix.com>
Date: Thu, 1 Jun 2023 12:18:58 +0900
Subject: [PATCH] net: Provide MemReentrancyGuard * to qemu_new_nic()

Recently MemReentrancyGuard was added to DeviceState to record that the
device is engaging in I/O. The network device backend needs to update it
when delivering a packet to a device.

In preparation for such a change, add MemReentrancyGuard * as a
parameter of qemu_new_nic().

Signed-off-by: Akihiko Odaki <akihiko.odaki@daynix.com>
Reviewed-by: Alexander Bulekov <alxndr@bu.edu>
Signed-off-by: Jason Wang <jasowang@redhat.com>

Upstream-Status: Backport [import from ubuntu https://git.launchpad.net/ubuntu/+source/qemu/tree/debian/patches/CVE-2023-3019-1.patch?h=ubuntu/focal-security
Upstream commit https://gitlab.com/qemu-project/qemu/-/commit/7d0fefdf81f5973334c344f6b8e1896c309dff66]
CVE: CVE-2023-3019
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 hw/net/allwinner-sun8i-emac.c | 3 ++-
 hw/net/allwinner_emac.c       | 3 ++-
 hw/net/cadence_gem.c          | 3 ++-
 hw/net/dp8393x.c              | 3 ++-
 hw/net/e1000.c                | 3 ++-
 hw/net/e1000e.c               | 2 +-
 hw/net/eepro100.c             | 4 +++-
 hw/net/etraxfs_eth.c          | 3 ++-
 hw/net/fsl_etsec/etsec.c      | 3 ++-
 hw/net/ftgmac100.c            | 3 ++-
 hw/net/i82596.c               | 2 +-
 hw/net/igb.c                  | 2 +-
 hw/net/imx_fec.c              | 2 +-
 hw/net/lan9118.c              | 3 ++-
 hw/net/mcf_fec.c              | 3 ++-
 hw/net/mipsnet.c              | 3 ++-
 hw/net/msf2-emac.c            | 3 ++-
 hw/net/mv88w8618_eth.c        | 3 ++-
 hw/net/ne2000-isa.c           | 3 ++-
 hw/net/ne2000-pci.c           | 3 ++-
 hw/net/npcm7xx_emc.c          | 3 ++-
 hw/net/opencores_eth.c        | 3 ++-
 hw/net/pcnet.c                | 3 ++-
 hw/net/rocker/rocker_fp.c     | 4 ++--
 hw/net/rtl8139.c              | 3 ++-
 hw/net/smc91c111.c            | 3 ++-
 hw/net/spapr_llan.c           | 3 ++-
 hw/net/stellaris_enet.c       | 3 ++-
 hw/net/sungem.c               | 2 +-
 hw/net/sunhme.c               | 3 ++-
 hw/net/tulip.c                | 3 ++-
 hw/net/virtio-net.c           | 6 ++++--
 hw/net/vmxnet3.c              | 2 +-
 hw/net/xen_nic.c              | 3 ++-
 hw/net/xgmac.c                | 3 ++-
 hw/net/xilinx_axienet.c       | 3 ++-
 hw/net/xilinx_ethlite.c       | 3 ++-
 hw/usb/dev-network.c          | 3 ++-
 include/net/net.h             | 1 +
 net/net.c                     | 1 +
 40 files changed, 75 insertions(+), 40 deletions(-)

Index: qemu-4.2/hw/net/allwinner_emac.c
===================================================================
--- qemu-4.2.orig/hw/net/allwinner_emac.c
+++ qemu-4.2/hw/net/allwinner_emac.c
@@ -453,7 +453,8 @@ static void aw_emac_realize(DeviceState
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_aw_emac_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     fifo8_create(&s->rx_fifo, RX_FIFO_SIZE);
Index: qemu-4.2/hw/net/cadence_gem.c
===================================================================
--- qemu-4.2.orig/hw/net/cadence_gem.c
+++ qemu-4.2/hw/net/cadence_gem.c
@@ -1569,7 +1569,8 @@ static void gem_realize(DeviceState *dev
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
 
     s->nic = qemu_new_nic(&net_gem_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
 }
 
 static void gem_init(Object *obj)
Index: qemu-4.2/hw/net/dp8393x.c
===================================================================
--- qemu-4.2.orig/hw/net/dp8393x.c
+++ qemu-4.2/hw/net/dp8393x.c
@@ -977,7 +977,8 @@ static void dp8393x_realize(DeviceState
                           "dp8393x-regs", 0x40 << s->it_shift);
 
     s->nic = qemu_new_nic(&net_dp83932_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     s->watchdog = timer_new_ns(QEMU_CLOCK_VIRTUAL, dp8393x_watchdog, s);
Index: qemu-4.2/hw/net/e1000.c
===================================================================
--- qemu-4.2.orig/hw/net/e1000.c
+++ qemu-4.2/hw/net/e1000.c
@@ -1713,7 +1713,8 @@ static void pci_e1000_realize(PCIDevice
                                macaddr);
 
     d->nic = qemu_new_nic(&net_e1000_info, &d->conf,
-                          object_get_typename(OBJECT(d)), dev->id, d);
+                          object_get_typename(OBJECT(d)), dev->id,
+                          &dev->mem_reentrancy_guard, d);
 
     qemu_format_nic_info_str(qemu_get_queue(d->nic), macaddr);
 
Index: qemu-4.2/hw/net/e1000e.c
===================================================================
--- qemu-4.2.orig/hw/net/e1000e.c
+++ qemu-4.2/hw/net/e1000e.c
@@ -326,7 +326,7 @@ e1000e_init_net_peer(E1000EState *s, PCI
     int i;
 
     s->nic = qemu_new_nic(&net_e1000e_info, &s->conf,
-        object_get_typename(OBJECT(s)), dev->id, s);
+        object_get_typename(OBJECT(s)), dev->id, &dev->mem_reentrancy_guard, s);
 
     s->core.max_queue_num = s->conf.peers.queues - 1;
 
Index: qemu-4.2/hw/net/eepro100.c
===================================================================
--- qemu-4.2.orig/hw/net/eepro100.c
+++ qemu-4.2/hw/net/eepro100.c
@@ -1865,7 +1865,9 @@ static void e100_nic_realize(PCIDevice *
     nic_reset(s);
 
     s->nic = qemu_new_nic(&net_eepro100_info, &s->conf,
-                          object_get_typename(OBJECT(pci_dev)), pci_dev->qdev.id, s);
+                          object_get_typename(OBJECT(pci_dev)),
+                          pci_dev->qdev.id,
+                          &pci_dev->qdev.mem_reentrancy_guard, s);
 
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
     TRACE(OTHER, logout("%s\n", qemu_get_queue(s->nic)->info_str));
Index: qemu-4.2/hw/net/etraxfs_eth.c
===================================================================
--- qemu-4.2.orig/hw/net/etraxfs_eth.c
+++ qemu-4.2/hw/net/etraxfs_eth.c
@@ -625,7 +625,8 @@ static void etraxfs_eth_realize(DeviceSt
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_etraxfs_info, &s->conf,
-                          object_get_typename(OBJECT(s)), dev->id, s);
+                          object_get_typename(OBJECT(s)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     s->phy.read = tdk_read;
Index: qemu-4.2/hw/net/fsl_etsec/etsec.c
===================================================================
--- qemu-4.2.orig/hw/net/fsl_etsec/etsec.c
+++ qemu-4.2/hw/net/fsl_etsec/etsec.c
@@ -389,7 +389,8 @@ static void etsec_realize(DeviceState *d
     eTSEC        *etsec = ETSEC_COMMON(dev);
 
     etsec->nic = qemu_new_nic(&net_etsec_info, &etsec->conf,
-                              object_get_typename(OBJECT(dev)), dev->id, etsec);
+                              object_get_typename(OBJECT(dev)), dev->id,
+                              &dev->mem_reentrancy_guard, etsec);
     qemu_format_nic_info_str(qemu_get_queue(etsec->nic), etsec->conf.macaddr.a);
 
     etsec->ptimer = ptimer_init(etsec_timer_hit, etsec, PTIMER_POLICY_DEFAULT);
Index: qemu-4.2/hw/net/ftgmac100.c
===================================================================
--- qemu-4.2.orig/hw/net/ftgmac100.c
+++ qemu-4.2/hw/net/ftgmac100.c
@@ -1023,7 +1023,7 @@ static void ftgmac100_realize(DeviceStat
 
     s->nic = qemu_new_nic(&net_ftgmac100_info, &s->conf,
                           object_get_typename(OBJECT(dev)), DEVICE(dev)->id,
-                          s);
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/imx_fec.c
===================================================================
--- qemu-4.2.orig/hw/net/imx_fec.c
+++ qemu-4.2/hw/net/imx_fec.c
@@ -1320,7 +1320,8 @@ static void imx_eth_realize(DeviceState
 
     s->nic = qemu_new_nic(&imx_eth_net_info, &s->conf,
                           object_get_typename(OBJECT(dev)),
-                          DEVICE(dev)->id, s);
+                          DEVICE(dev)->id,
+                          &dev->mem_reentrancy_guard, s);
 
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
Index: qemu-4.2/hw/net/lan9118.c
===================================================================
--- qemu-4.2.orig/hw/net/lan9118.c
+++ qemu-4.2/hw/net/lan9118.c
@@ -1342,7 +1342,8 @@ static void lan9118_realize(DeviceState
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
 
     s->nic = qemu_new_nic(&net_lan9118_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
     s->eeprom[0] = 0xa5;
     for (i = 0; i < 6; i++) {
Index: qemu-4.2/hw/net/mcf_fec.c
===================================================================
--- qemu-4.2.orig/hw/net/mcf_fec.c
+++ qemu-4.2/hw/net/mcf_fec.c
@@ -640,7 +640,8 @@ static void mcf_fec_realize(DeviceState
     mcf_fec_state *s = MCF_FEC_NET(dev);
 
     s->nic = qemu_new_nic(&net_mcf_fec_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/mipsnet.c
===================================================================
--- qemu-4.2.orig/hw/net/mipsnet.c
+++ qemu-4.2/hw/net/mipsnet.c
@@ -250,7 +250,8 @@ static void mipsnet_realize(DeviceState
     sysbus_init_irq(sbd, &s->irq);
 
     s->nic = qemu_new_nic(&net_mipsnet_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/ne2000-isa.c
===================================================================
--- qemu-4.2.orig/hw/net/ne2000-isa.c
+++ qemu-4.2/hw/net/ne2000-isa.c
@@ -73,7 +73,8 @@ static void isa_ne2000_realizefn(DeviceS
     ne2000_reset(s);
 
     s->nic = qemu_new_nic(&net_ne2000_isa_info, &s->c,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->c.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/opencores_eth.c
===================================================================
--- qemu-4.2.orig/hw/net/opencores_eth.c
+++ qemu-4.2/hw/net/opencores_eth.c
@@ -732,7 +732,8 @@ static void sysbus_open_eth_realize(Devi
     sysbus_init_irq(sbd, &s->irq);
 
     s->nic = qemu_new_nic(&net_open_eth_info, &s->conf,
-                          object_get_typename(OBJECT(s)), dev->id, s);
+                          object_get_typename(OBJECT(s)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
 }
 
 static void qdev_open_eth_reset(DeviceState *dev)
Index: qemu-4.2/hw/net/pcnet.c
===================================================================
--- qemu-4.2.orig/hw/net/pcnet.c
+++ qemu-4.2/hw/net/pcnet.c
@@ -1718,7 +1718,8 @@ void pcnet_common_init(DeviceState *dev,
     s->poll_timer = timer_new_ns(QEMU_CLOCK_VIRTUAL, pcnet_poll_timer, s);
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
-    s->nic = qemu_new_nic(info, &s->conf, object_get_typename(OBJECT(dev)), dev->id, s);
+    s->nic = qemu_new_nic(info, &s->conf, object_get_typename(OBJECT(dev)),
+                          dev->id, &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     /* Initialize the PROM */
Index: qemu-4.2/hw/net/rocker/rocker_fp.c
===================================================================
--- qemu-4.2.orig/hw/net/rocker/rocker_fp.c
+++ qemu-4.2/hw/net/rocker/rocker_fp.c
@@ -238,8 +238,8 @@ FpPort *fp_port_alloc(Rocker *r, char *s
     port->conf.bootindex = -1;
     port->conf.peers = *peers;
 
-    port->nic = qemu_new_nic(&fp_port_info, &port->conf,
-                             sw_name, NULL, port);
+    port->nic = qemu_new_nic(&fp_port_info, &port->conf, sw_name, NULL,
+                             &DEVICE(r)->mem_reentrancy_guard, port);
     qemu_format_nic_info_str(qemu_get_queue(port->nic),
                              port->conf.macaddr.a);
 
Index: qemu-4.2/hw/net/rtl8139.c
===================================================================
--- qemu-4.2.orig/hw/net/rtl8139.c
+++ qemu-4.2/hw/net/rtl8139.c
@@ -3397,7 +3397,8 @@ static void pci_rtl8139_realize(PCIDevic
     s->eeprom.contents[9] = s->conf.macaddr.a[4] | s->conf.macaddr.a[5] << 8;
 
     s->nic = qemu_new_nic(&net_rtl8139_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), d->id, s);
+                          object_get_typename(OBJECT(dev)), d->id,
+                          &d->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     s->cplus_txbuffer = NULL;
Index: qemu-4.2/hw/net/smc91c111.c
===================================================================
--- qemu-4.2.orig/hw/net/smc91c111.c
+++ qemu-4.2/hw/net/smc91c111.c
@@ -781,7 +781,8 @@ static void smc91c111_realize(DeviceStat
     sysbus_init_irq(sbd, &s->irq);
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_smc91c111_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
     /* ??? Save/restore.  */
 }
Index: qemu-4.2/hw/net/spapr_llan.c
===================================================================
--- qemu-4.2.orig/hw/net/spapr_llan.c
+++ qemu-4.2/hw/net/spapr_llan.c
@@ -326,7 +326,8 @@ static void spapr_vlan_realize(SpaprVioD
     memcpy(&dev->perm_mac.a, &dev->nicconf.macaddr.a, sizeof(dev->perm_mac.a));
 
     dev->nic = qemu_new_nic(&net_spapr_vlan_info, &dev->nicconf,
-                            object_get_typename(OBJECT(sdev)), sdev->qdev.id, dev);
+                            object_get_typename(OBJECT(sdev)), sdev->qdev.id,
+                            &sdev->qdev.mem_reentrancy_guard, dev);
     qemu_format_nic_info_str(qemu_get_queue(dev->nic), dev->nicconf.macaddr.a);
 
     dev->rxp_timer = timer_new_us(QEMU_CLOCK_VIRTUAL, spapr_vlan_flush_rx_queue,
Index: qemu-4.2/hw/net/stellaris_enet.c
===================================================================
--- qemu-4.2.orig/hw/net/stellaris_enet.c
+++ qemu-4.2/hw/net/stellaris_enet.c
@@ -492,7 +492,8 @@ static void stellaris_enet_realize(Devic
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
 
     s->nic = qemu_new_nic(&net_stellaris_enet_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/sungem.c
===================================================================
--- qemu-4.2.orig/hw/net/sungem.c
+++ qemu-4.2/hw/net/sungem.c
@@ -1360,7 +1360,7 @@ static void sungem_realize(PCIDevice *pc
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_sungem_info, &s->conf,
                           object_get_typename(OBJECT(dev)),
-                          dev->id, s);
+                          dev->id, &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic),
                              s->conf.macaddr.a);
 }
Index: qemu-4.2/hw/net/sunhme.c
===================================================================
--- qemu-4.2.orig/hw/net/sunhme.c
+++ qemu-4.2/hw/net/sunhme.c
@@ -891,7 +891,8 @@ static void sunhme_realize(PCIDevice *pc
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_sunhme_info, &s->conf,
-                          object_get_typename(OBJECT(d)), d->id, s);
+                          object_get_typename(OBJECT(d)), d->id,
+                          &d->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/virtio-net.c
===================================================================
--- qemu-4.2.orig/hw/net/virtio-net.c
+++ qemu-4.2/hw/net/virtio-net.c
@@ -3065,10 +3065,12 @@ static void virtio_net_device_realize(De
          * Happen when virtio_net_set_netclient_name has been called.
          */
         n->nic = qemu_new_nic(&net_virtio_info, &n->nic_conf,
-                              n->netclient_type, n->netclient_name, n);
+                              n->netclient_type, n->netclient_name,
+                              &dev->mem_reentrancy_guard, n);
     } else {
         n->nic = qemu_new_nic(&net_virtio_info, &n->nic_conf,
-                              object_get_typename(OBJECT(dev)), dev->id, n);
+                              object_get_typename(OBJECT(dev)), dev->id,
+                              &dev->mem_reentrancy_guard, n);
     }
 
     peer_test_vnet_hdr(n);
Index: qemu-4.2/hw/net/vmxnet3.c
===================================================================
--- qemu-4.2.orig/hw/net/vmxnet3.c
+++ qemu-4.2/hw/net/vmxnet3.c
@@ -2065,7 +2065,7 @@ static void vmxnet3_net_init(VMXNET3Stat
 
     s->nic = qemu_new_nic(&net_vmxnet3_info, &s->conf,
                           object_get_typename(OBJECT(s)),
-                          d->id, s);
+                          d->id, &d->mem_reentrancy_guard, s);
 
     s->peer_has_vhdr = vmxnet3_peer_has_vnet_hdr(s);
     s->tx_sop = true;
Index: qemu-4.2/hw/net/xen_nic.c
===================================================================
--- qemu-4.2.orig/hw/net/xen_nic.c
+++ qemu-4.2/hw/net/xen_nic.c
@@ -294,7 +294,8 @@ static int net_init(struct XenLegacyDevi
     }
 
     netdev->nic = qemu_new_nic(&net_xen_info, &netdev->conf,
-                               "xen", NULL, netdev);
+                               "xen", NULL,
+                               &xendev->qdev.mem_reentrancy_guard, netdev);
 
     snprintf(qemu_get_queue(netdev->nic)->info_str,
              sizeof(qemu_get_queue(netdev->nic)->info_str),
Index: qemu-4.2/hw/net/xgmac.c
===================================================================
--- qemu-4.2.orig/hw/net/xgmac.c
+++ qemu-4.2/hw/net/xgmac.c
@@ -402,7 +402,8 @@ static void xgmac_enet_realize(DeviceSta
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_xgmac_enet_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     s->regs[XGMAC_ADDR_HIGH(0)] = (s->conf.macaddr.a[5] << 8) |
Index: qemu-4.2/hw/net/xilinx_axienet.c
===================================================================
--- qemu-4.2.orig/hw/net/xilinx_axienet.c
+++ qemu-4.2/hw/net/xilinx_axienet.c
@@ -974,7 +974,8 @@ static void xilinx_enet_realize(DeviceSt
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_xilinx_enet_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 
     tdk_init(&s->TEMAC.phy);
Index: qemu-4.2/hw/net/xilinx_ethlite.c
===================================================================
--- qemu-4.2.orig/hw/net/xilinx_ethlite.c
+++ qemu-4.2/hw/net/xilinx_ethlite.c
@@ -234,7 +234,8 @@ static void xilinx_ethlite_realize(Devic
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_xilinx_ethlite_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/usb/dev-network.c
===================================================================
--- qemu-4.2.orig/hw/usb/dev-network.c
+++ qemu-4.2/hw/usb/dev-network.c
@@ -1361,7 +1361,8 @@ static void usb_net_realize(USBDevice *d
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_usbnet_info, &s->conf,
-                          object_get_typename(OBJECT(s)), s->dev.qdev.id, s);
+                          object_get_typename(OBJECT(s)), s->dev.qdev.id,
+                          &s->dev.qdev.mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
     snprintf(s->usbstring_mac, sizeof(s->usbstring_mac),
              "%02x%02x%02x%02x%02x%02x",
Index: qemu-4.2/include/net/net.h
===================================================================
--- qemu-4.2.orig/include/net/net.h
+++ qemu-4.2/include/net/net.h
@@ -134,6 +134,7 @@ NICState *qemu_new_nic(NetClientInfo *in
                        NICConf *conf,
                        const char *model,
                        const char *name,
+                       MemReentrancyGuard *reentrancy_guard,
                        void *opaque);
 void qemu_del_nic(NICState *nic);
 NetClientState *qemu_get_subqueue(NICState *nic, int queue_index);
Index: qemu-4.2/net/net.c
===================================================================
--- qemu-4.2.orig/net/net.c
+++ qemu-4.2/net/net.c
@@ -278,6 +278,7 @@ NICState *qemu_new_nic(NetClientInfo *in
                        NICConf *conf,
                        const char *model,
                        const char *name,
+                       MemReentrancyGuard *reentrancy_guard,
                        void *opaque)
 {
     NetClientState **peers = conf->peers.ncs;
Index: qemu-4.2/hw/arm/musicpal.c
===================================================================
--- qemu-4.2.orig/hw/arm/musicpal.c
+++ qemu-4.2/hw/arm/musicpal.c
@@ -405,7 +405,8 @@ static void mv88w8618_eth_realize(Device
     mv88w8618_eth_state *s = MV88W8618_ETH(dev);
 
     s->nic = qemu_new_nic(&net_mv88w8618_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
 }
 
 static const VMStateDescription mv88w8618_eth_vmsd = {
Index: qemu-4.2/hw/net/milkymist-minimac2.c
===================================================================
--- qemu-4.2.orig/hw/net/milkymist-minimac2.c
+++ qemu-4.2/hw/net/milkymist-minimac2.c
@@ -484,7 +484,8 @@ static void milkymist_minimac2_realize(D
 
     qemu_macaddr_default_if_unset(&s->conf.macaddr);
     s->nic = qemu_new_nic(&net_milkymist_minimac2_info, &s->conf,
-                          object_get_typename(OBJECT(dev)), dev->id, s);
+                          object_get_typename(OBJECT(dev)), dev->id,
+                          &dev->mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->conf.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/ne2000-pci.c
===================================================================
--- qemu-4.2.orig/hw/net/ne2000-pci.c
+++ qemu-4.2/hw/net/ne2000-pci.c
@@ -71,7 +71,8 @@ static void pci_ne2000_realize(PCIDevice
 
     s->nic = qemu_new_nic(&net_ne2000_info, &s->c,
                           object_get_typename(OBJECT(pci_dev)),
-                          pci_dev->qdev.id, s);
+                          pci_dev->qdev.id,
+                          &pci_dev->qdev.mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->c.macaddr.a);
 }
 
Index: qemu-4.2/hw/net/tulip.c
===================================================================
--- qemu-4.2.orig/hw/net/tulip.c
+++ qemu-4.2/hw/net/tulip.c
@@ -975,7 +975,8 @@ static void pci_tulip_realize(PCIDevice
 
     s->nic = qemu_new_nic(&net_tulip_info, &s->c,
                           object_get_typename(OBJECT(pci_dev)),
-                          pci_dev->qdev.id, s);
+                          pci_dev->qdev.id,
+                          &pci_dev->qdev.mem_reentrancy_guard, s);
     qemu_format_nic_info_str(qemu_get_queue(s->nic), s->c.macaddr.a);
 }
 
