From 529b82842f60b144b2ed594e112ba5a24a5f0f9f Mon Sep 17 00:00:00 2001
From: Peter Maydell <peter.maydell@linaro.org>
Date: Thu, 31 May 2018 14:50:52 +0100
Subject: [PATCH 08/11] Make memory_region_access_valid() take a MemTxAttrs
 argument
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

As part of plumbing MemTxAttrs down to the IOMMU translate method,
add MemTxAttrs as an argument to memory_region_access_valid().
Its callers either have an attrs value to hand, or don't care
and can use MEMTXATTRS_UNSPECIFIED.

The callsite in flatview_access_valid() is part of a recursive
loop flatview_access_valid() -> memory_region_access_valid() ->
 subpage_accepts() -> flatview_access_valid(); we make it pass
MEMTXATTRS_UNSPECIFIED for now, until the next several commits
have plumbed an attrs parameter through the rest of the loop
and we can add an attrs parameter to flatview_access_valid().

Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
Reviewed-by: Alex Benn√©e <alex.bennee@linaro.org>
Reviewed-by: Richard Henderson <richard.henderson@linaro.org>
Message-id: 20180521140402.23318-8-peter.maydell@linaro.org

Upstream Status: Backport https://git.qemu.org/?p=qemu.git;a=commitdiff;h=6d7b9a6c
CVE: CVE-2020-13754 patch #3
Signed-off-by: Milan Shah <mshah@mvista.com>
---
 exec.c                         | 4 +++-
 include/exec/memory-internal.h | 3 ++-
 memory.c                       | 7 ++++---
 3 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/exec.c b/exec.c
index 9e227eb..44cfc48 100644
--- a/exec.c
+++ b/exec.c
@@ -3260,7 +3260,9 @@ bool address_space_access_valid(AddressSpace *as, hwaddr addr, int len, bool is_
         mr = address_space_translate(as, addr, &xlat, &l, is_write);
         if (!memory_access_is_direct(mr, is_write)) {
             l = memory_access_size(mr, l, addr);
-            if (!memory_region_access_valid(mr, xlat, l, is_write)) {
+            /* When our callers all have attrs we'll pass them through here */
+            if (!memory_region_access_valid(mr, xlat, l, is_write,
+                                            MEMTXATTRS_UNSPECIFIED)) {
                 rcu_read_unlock();
                 return false;
             }
diff --git a/include/exec/memory-internal.h b/include/exec/memory-internal.h
index fb467ac..37390ca 100644
--- a/include/exec/memory-internal.h
+++ b/include/exec/memory-internal.h
@@ -29,7 +29,8 @@ void address_space_destroy_dispatch(AddressSpace *as);
 extern const MemoryRegionOps unassigned_mem_ops;
 
 bool memory_region_access_valid(MemoryRegion *mr, hwaddr addr,
-                                unsigned size, bool is_write);
+                                unsigned size, bool is_write,
+                                MemTxAttrs attrs);
 
 #endif
 #endif
diff --git a/memory.c b/memory.c
index c0adc35..0a610cf 100644
--- a/memory.c
+++ b/memory.c
@@ -1210,7 +1210,8 @@ static const MemoryRegionOps ram_device_mem_ops = {
 bool memory_region_access_valid(MemoryRegion *mr,
                                 hwaddr addr,
                                 unsigned size,
-                                bool is_write)
+                                bool is_write,
+                                MemTxAttrs attrs)
 {
     int access_size_min, access_size_max;
     int access_size, i;
@@ -1279,7 +1280,7 @@ MemTxResult memory_region_dispatch_read(MemoryRegion *mr,
 {
     MemTxResult r;
 
-    if (!memory_region_access_valid(mr, addr, size, false)) {
+    if (!memory_region_access_valid(mr, addr, size, false, attrs)) {
         *pval = unassigned_mem_read(mr, addr, size);
         return MEMTX_DECODE_ERROR;
     }
@@ -1321,7 +1322,7 @@ MemTxResult memory_region_dispatch_write(MemoryRegion *mr,
                                          unsigned size,
                                          MemTxAttrs attrs)
 {
-    if (!memory_region_access_valid(mr, addr, size, true)) {
+    if (!memory_region_access_valid(mr, addr, size, true, attrs)) {
         unassigned_mem_write(mr, addr, data, size);
         return MEMTX_DECODE_ERROR;
     }
-- 
2.7.4

