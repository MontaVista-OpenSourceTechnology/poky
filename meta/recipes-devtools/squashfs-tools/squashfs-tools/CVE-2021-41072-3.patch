From 2d0e8c4f87e90291de2cb4765cfd2ea2b8e13be5 Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Thu, 24 Nov 2022 06:18:04 +0000
Subject: [PATCH] unsquashfs: use linked list to store directory names

This should bring higher performance, and it allows sorting
if necessary (1.x and 2.0 filesystems).

Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>

Upstream-Status: Backport [https://launchpad.net/ubuntu/+source/squashfs-tools/1:4.3-6ubuntu0.18.04.4]
CVE: CVE-2021-41072
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 unsquash-1.c    | 31 ++++++++++++++++---------------
 unsquash-1234.c | 12 ++++++++----
 unsquash-3.c    | 31 ++++++++++++++++---------------
 unsquash-4.c    | 31 ++++++++++++++++---------------
 unsquashfs.c    | 16 ++++++++++------
 unsquashfs.h    |  3 ++-
 6 files changed, 68 insertions(+), 56 deletions(-)

diff --git a/unsquash-1.c b/unsquash-1.c
index 784ee15..1c389bf 100644
--- a/unsquash-1.c
+++ b/unsquash-1.c
@@ -211,7 +211,7 @@ struct dir *squashfs_opendir_1(unsigned int block_start, unsigned int offset,
 	long long start;
 	int bytes;
 	int dir_count, size;
-	struct dir_ent *new_dir;
+        struct dir_ent *ent, *cur_ent = NULL;
 	struct dir *dir;
 
 	TRACE("squashfs_opendir: inode start block %d, offset %d\n",
@@ -224,7 +224,7 @@ struct dir *squashfs_opendir_1(unsigned int block_start, unsigned int offset,
 		EXIT_UNSQUASH("squashfs_opendir: malloc failed!\n");
 
 	dir->dir_count = 0;
-	dir->cur_entry = 0;
+        dir->cur_entry = NULL;
 	dir->mode = (*i)->mode;
 	dir->uid = (*i)->uid;
 	dir->guid = (*i)->gid;
@@ -295,19 +295,20 @@ struct dir *squashfs_opendir_1(unsigned int block_start, unsigned int offset,
 			TRACE("squashfs_opendir: directory entry %s, inode "
 				"%d:%d, type %d\n", dire->name,
 				dirh.start_block, dire->offset, dire->type);
-			if((dir->dir_count % DIR_ENT_SIZE) == 0) {
-				new_dir = realloc(dir->dirs, (dir->dir_count +
-					DIR_ENT_SIZE) * sizeof(struct dir_ent));
-				if(new_dir == NULL)
-					EXIT_UNSQUASH("squashfs_opendir: "
-						"realloc failed!\n");
-				dir->dirs = new_dir;
-			}
-                        dir->dirs[dir->dir_count].name = strdup(dire->name);
-			dir->dirs[dir->dir_count].start_block =
-				dirh.start_block;
-			dir->dirs[dir->dir_count].offset = dire->offset;
-			dir->dirs[dir->dir_count].type = dire->type;
+                        ent = malloc(sizeof(struct dir_ent));
+                        if(ent == NULL)
+                                MEM_ERROR();
+
+                        ent->name = strdup(dire->name);
+                        ent->start_block = dirh.start_block;
+                        ent->offset = dire->offset;
+                        ent->type = dire->type;
+                        ent->next = NULL;
+                        if(cur_ent == NULL)
+                                dir->dirs = ent;
+                        else
+                                cur_ent->next = ent;
+                        cur_ent = ent;
 			dir->dir_count ++;
 			bytes += dire->size + 1;
 		}
diff --git a/unsquash-1234.c b/unsquash-1234.c
index c5bc42a..ddc161a 100644
--- a/unsquash-1234.c
+++ b/unsquash-1234.c
@@ -60,11 +60,15 @@ int check_name(char *name, int size)
 
 void squashfs_closedir(struct dir *dir)
 {
-       int i;
+       struct dir_ent *ent = dir->dirs;
 
-       for(i = 0; i < dir->dir_count; i++)
-               free(dir->dirs[i].name);
+       while(ent) {
+               struct dir_ent *tmp = ent;
+
+               ent = ent->next;
+               free(tmp->name);
+               free(tmp);
+       }
 
-       free(dir->dirs);
        free(dir);
 }
diff --git a/unsquash-3.c b/unsquash-3.c
index b5aa712..39c6812 100644
--- a/unsquash-3.c
+++ b/unsquash-3.c
@@ -288,7 +288,7 @@ struct dir *squashfs_opendir_3(unsigned int block_start, unsigned int offset,
 	long long start;
 	int bytes;
 	int dir_count, size;
-	struct dir_ent *new_dir;
+        struct dir_ent *ent, *cur_ent = NULL;
 	struct dir *dir;
 
 	TRACE("squashfs_opendir: inode start block %d, offset %d\n",
@@ -301,7 +301,7 @@ struct dir *squashfs_opendir_3(unsigned int block_start, unsigned int offset,
 		EXIT_UNSQUASH("squashfs_opendir: malloc failed!\n");
 
 	dir->dir_count = 0;
-	dir->cur_entry = 0;
+        dir->cur_entry = NULL;
 	dir->mode = (*i)->mode;
 	dir->uid = (*i)->uid;
 	dir->guid = (*i)->gid;
@@ -373,19 +373,20 @@ struct dir *squashfs_opendir_3(unsigned int block_start, unsigned int offset,
 			TRACE("squashfs_opendir: directory entry %s, inode "
 				"%d:%d, type %d\n", dire->name,
 				dirh.start_block, dire->offset, dire->type);
-			if((dir->dir_count % DIR_ENT_SIZE) == 0) {
-				new_dir = realloc(dir->dirs, (dir->dir_count +
-					DIR_ENT_SIZE) * sizeof(struct dir_ent));
-				if(new_dir == NULL)
-					EXIT_UNSQUASH("squashfs_opendir: "
-						"realloc failed!\n");
-				dir->dirs = new_dir;
-			}
-                        dir->dirs[dir->dir_count].name = strdup(dire->name);
-			dir->dirs[dir->dir_count].start_block =
-				dirh.start_block;
-			dir->dirs[dir->dir_count].offset = dire->offset;
-			dir->dirs[dir->dir_count].type = dire->type;
+                        ent = malloc(sizeof(struct dir_ent));
+                        if(ent == NULL)
+                                MEM_ERROR();
+
+                        ent->name = strdup(dire->name);
+                        ent->start_block = dirh.start_block;
+                        ent->offset = dire->offset;
+                        ent->type = dire->type;
+                        ent->next = NULL;
+                        if(cur_ent == NULL)
+                                dir->dirs = ent;
+                        else
+                                cur_ent->next = ent;
+                        cur_ent = ent;
 			dir->dir_count ++;
 			bytes += dire->size + 1;
 		}
diff --git a/unsquash-4.c b/unsquash-4.c
index 43b639f..b7fcde1 100644
--- a/unsquash-4.c
+++ b/unsquash-4.c
@@ -257,7 +257,7 @@ struct dir *squashfs_opendir_4(unsigned int block_start, unsigned int offset,
 	long long start;
 	int bytes;
 	int dir_count, size;
-	struct dir_ent *new_dir;
+        struct dir_ent *ent, *cur_ent = NULL;
 	struct dir *dir;
 
 	TRACE("squashfs_opendir: inode start block %d, offset %d\n",
@@ -270,7 +270,7 @@ struct dir *squashfs_opendir_4(unsigned int block_start, unsigned int offset,
 		EXIT_UNSQUASH("squashfs_opendir: malloc failed!\n");
 
 	dir->dir_count = 0;
-	dir->cur_entry = 0;
+        dir->cur_entry = NULL;
 	dir->mode = (*i)->mode;
 	dir->uid = (*i)->uid;
 	dir->guid = (*i)->gid;
@@ -331,19 +331,20 @@ struct dir *squashfs_opendir_4(unsigned int block_start, unsigned int offset,
 			TRACE("squashfs_opendir: directory entry %s, inode "
 				"%d:%d, type %d\n", dire->name,
 				dirh.start_block, dire->offset, dire->type);
-			if((dir->dir_count % DIR_ENT_SIZE) == 0) {
-				new_dir = realloc(dir->dirs, (dir->dir_count +
-					DIR_ENT_SIZE) * sizeof(struct dir_ent));
-				if(new_dir == NULL)
-					EXIT_UNSQUASH("squashfs_opendir: "
-						"realloc failed!\n");
-				dir->dirs = new_dir;
-			}
-                        dir->dirs[dir->dir_count].name = strdup(dire->name);
-			dir->dirs[dir->dir_count].start_block =
-				dirh.start_block;
-			dir->dirs[dir->dir_count].offset = dire->offset;
-			dir->dirs[dir->dir_count].type = dire->type;
+                        ent = malloc(sizeof(struct dir_ent));
+                        if(ent == NULL)
+                                MEM_ERROR();
+
+                        ent->name = strdup(dire->name);
+                        ent->start_block = dirh.start_block;
+                        ent->offset = dire->offset;
+                        ent->type = dire->type;
+                        ent->next = NULL;
+                        if(cur_ent == NULL)
+                                dir->dirs = ent;
+                        else
+                                cur_ent->next = ent;
+                        cur_ent = ent;
 			dir->dir_count ++;
 			bytes += dire->size + 1;
 		}
diff --git a/unsquashfs.c b/unsquashfs.c
index 26eb65b..73054ad 100644
--- a/unsquashfs.c
+++ b/unsquashfs.c
@@ -1238,14 +1238,18 @@ failed:
 int squashfs_readdir(struct dir *dir, char **name, unsigned int *start_block,
 unsigned int *offset, unsigned int *type)
 {
-	if(dir->cur_entry == dir->dir_count)
+        if(dir->cur_entry == NULL)
+                dir->cur_entry = dir->dirs;
+        else
+                dir->cur_entry = dir->cur_entry->next;
+
+        if(dir->cur_entry == NULL)
 		return FALSE;
 
-	*name = dir->dirs[dir->cur_entry].name;
-	*start_block = dir->dirs[dir->cur_entry].start_block;
-	*offset = dir->dirs[dir->cur_entry].offset;
-	*type = dir->dirs[dir->cur_entry].type;
-	dir->cur_entry ++;
+        *name = dir->cur_entry->name;
+        *start_block = dir->cur_entry->start_block;
+        *offset = dir->cur_entry->offset;
+        *type = dir->cur_entry->type;
 
 	return TRUE;
 }
diff --git a/unsquashfs.h b/unsquashfs.h
index 0457c71..0fb466c 100644
--- a/unsquashfs.h
+++ b/unsquashfs.h
@@ -172,17 +172,18 @@ struct dir_ent	{
 	unsigned int	start_block;
 	unsigned int	offset;
 	unsigned int	type;
+        struct dir_ent  *next;
 };
 
 struct dir {
 	int		dir_count;
-	int 		cur_entry;
 	unsigned int	mode;
 	uid_t		uid;
 	gid_t		guid;
 	unsigned int	mtime;
 	unsigned int xattr;
 	struct dir_ent	*dirs;
+        struct dir_ent  *cur_entry;
 };
 
 struct file_entry {
-- 
2.18.2

