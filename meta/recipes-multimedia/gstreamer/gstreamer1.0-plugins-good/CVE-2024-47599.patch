From 09ee89f4c4ccbb1de21f7b7ed38dcc2d44f4253c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Sebastian=20Dr=C3=B6ge?= <sebastian@centricular.com>
Date: Mon, 30 Sep 2024 16:22:19 +0300
Subject: [PATCH] jpegdec: Directly error out on negotiation failures

Thanks to Antonio Morales for finding and reporting the issue.

Fixes GHSL-2024-247
Fixes https://gitlab.freedesktop.org/gstreamer/gstreamer/-/issues/3862

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/8040>
---
 subprojects/gst-plugins-good/ext/jpeg/gstjpegdec.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

This fixes CVE-2024-47599.

Signed-off-by: Javier Campos <jcampos@mvista.com>

`
Index: gst-plugins-good-1.12.2/ext/jpeg/gstjpegdec.c
===================================================================
--- gst-plugins-good-1.12.2.orig/ext/jpeg/gstjpegdec.c
+++ gst-plugins-good-1.12.2/ext/jpeg/gstjpegdec.c
@@ -941,13 +941,14 @@ format_not_supported:
   }
 }
 
-static void
+static gboolean
 gst_jpeg_dec_negotiate (GstJpegDec * dec, gint width, gint height, gint clrspc,
     gboolean interlaced)
 {
   GstVideoCodecState *outstate;
   GstVideoInfo *info;
   GstVideoFormat format;
+  gboolean res;
 
   switch (clrspc) {
     case JCS_RGB:
@@ -970,7 +971,7 @@ gst_jpeg_dec_negotiate (GstJpegDec * dec
         height == GST_VIDEO_INFO_HEIGHT (info) &&
         format == GST_VIDEO_INFO_FORMAT (info)) {
       gst_video_codec_state_unref (outstate);
-      return;
+      return TRUE;
     }
     gst_video_codec_state_unref (outstate);
   }
@@ -978,6 +979,8 @@ gst_jpeg_dec_negotiate (GstJpegDec * dec
   outstate =
       gst_video_decoder_set_output_state (GST_VIDEO_DECODER (dec), format,
       width, height, dec->input_state);
+  if (!outstate)
+    return FALSE;
 
   switch (clrspc) {
     case JCS_RGB:
@@ -999,10 +1002,12 @@ gst_jpeg_dec_negotiate (GstJpegDec * dec
 
   gst_video_codec_state_unref (outstate);
 
-  gst_video_decoder_negotiate (GST_VIDEO_DECODER (dec));
+  res = gst_video_decoder_negotiate (GST_VIDEO_DECODER (dec));
 
   GST_DEBUG_OBJECT (dec, "max_v_samp_factor=%d", dec->cinfo.max_v_samp_factor);
   GST_DEBUG_OBJECT (dec, "max_h_samp_factor=%d", dec->cinfo.max_h_samp_factor);
+
+  return res;
 }
 
 static GstFlowReturn
@@ -1268,8 +1273,9 @@ gst_jpeg_dec_handle_frame (GstVideoDecod
     num_fields = 1;
   }
 
-  gst_jpeg_dec_negotiate (dec, width, output_height,
-      dec->cinfo.jpeg_color_space, num_fields == 2);
+  if (!gst_jpeg_dec_negotiate (dec, width, output_height,
+          dec->cinfo.jpeg_color_space, num_fields == 2))
+    goto negotiation_failed;
 
   state = gst_video_decoder_get_output_state (bdec);
   ret = gst_video_decoder_allocate_output_frame (bdec, frame);
@@ -1384,6 +1390,12 @@ map_failed:
     ret = GST_FLOW_ERROR;
     goto exit;
   }
+negotiation_failed:
+  {
+    GST_ELEMENT_ERROR (dec, CORE, NEGOTIATION, (NULL), ("failed to negotiate"));
+    ret = GST_FLOW_NOT_NEGOTIATED;
+    goto exit;
+  }
 decode_error:
   {
     gchar err_msg[JMSG_LENGTH_MAX];
