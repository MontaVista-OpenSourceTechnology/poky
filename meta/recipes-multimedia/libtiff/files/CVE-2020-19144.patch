From 1fb9e731ef3e4ceb7af128ce298adb271088064f Mon Sep 17 00:00:00 2001
From: Thomas Bernard <miniupnp@free.fr>
Date: Fri, 22 Mar 2019 12:17:28 +0100
Subject: [PATCH] tif_luv.c: LogLuvSetupEncode() error must return 0

see http://bugzilla.maptools.org/show_bug.cgi?id=2848

if wrongly returning 1, the processing of incorrect file continues,
which causes problems.

Upstream-Status: Backport [import from ubuntu https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/tiff/4.0.9-5ubuntu0.10/tiff_4.0.9-5ubuntu0.10.debian.tar.xz
Upstream commit https://gitlab.com/libtiff/libtiff/-/commit/1fb9e731ef3]
CVE: CVE-2020-19144
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 libtiff/tif_luv.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- tiff-4.0.9.orig/libtiff/tif_luv.c
+++ tiff-4.0.9/libtiff/tif_luv.c
@@ -1501,7 +1501,7 @@ LogLuvSetupEncode(TIFF* tif)
 	switch (td->td_photometric) {
 	case PHOTOMETRIC_LOGLUV:
 		if (!LogLuvInitState(tif))
-			break;
+			return (0);
 		if (td->td_compression == COMPRESSION_SGILOG24) {
 			tif->tif_encoderow = LogLuvEncode24;
 			switch (sp->user_datafmt) {
@@ -1534,7 +1534,7 @@ LogLuvSetupEncode(TIFF* tif)
 		break;
 	case PHOTOMETRIC_LOGL:
 		if (!LogL16InitState(tif))
-			break;
+			return (0);
 		tif->tif_encoderow = LogL16Encode;  
 		switch (sp->user_datafmt) {
 		case SGILOGDATAFMT_FLOAT:
@@ -1550,7 +1550,7 @@ LogLuvSetupEncode(TIFF* tif)
 		TIFFErrorExt(tif->tif_clientdata, module,
 		    "Inappropriate photometric interpretation %d for SGILog compression; %s",
 		    td->td_photometric, "must be either LogLUV or LogL");
-		break;
+		return (0);
 	}
 	sp->encoder_state = 1;
 	return (1);
