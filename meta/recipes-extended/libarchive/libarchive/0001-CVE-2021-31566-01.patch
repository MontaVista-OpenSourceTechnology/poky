From 2cb9b91c0aa33c23bb9297b38ea6a891cb3760d0 Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Fri, 16 Sep 2022 04:58:00 +0000
Subject: [PATCH] CVE-2021-31566-01

Never follow symlinks when setting file flags on Linux 

When opening a file descriptor to set file flags on linux, ensure
no symbolic links are followed. This fixes the case when an archive
contains a directory entry followed by a symlink entry with the same
path. The fixup code would modify file flags of the symlink target.

Upstream-Status: Backport from https://github.com/libarchive/libarchive/commit/e2ad1a2c3064fa9eba6274b3641c4c1beed25c0b
CVE: CVE-2021-31566
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 libarchive/archive_write_disk_posix.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/libarchive/archive_write_disk_posix.c b/libarchive/archive_write_disk_posix.c
index 6ad5399..ee12401 100644
--- a/libarchive/archive_write_disk_posix.c
+++ b/libarchive/archive_write_disk_posix.c
@@ -3654,7 +3654,8 @@ set_fflags_platform(struct archive_write_disk *a, int fd, const char *name,
 
 	/* If we weren't given an fd, open it ourselves. */
 	if (myfd < 0) {
-		myfd = open(name, O_RDONLY | O_NONBLOCK | O_BINARY | O_CLOEXEC);
+                myfd = open(name, O_RDONLY | O_NONBLOCK | O_BINARY |
+                    O_CLOEXEC | O_NOFOLLOW);
 		__archive_ensure_cloexec_flag(myfd);
 	}
 	if (myfd < 0)
-- 
2.18.2

