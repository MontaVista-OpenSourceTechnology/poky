From 8f0650e1dc206c49b4d0b13a272be57fff6988fe Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Tue, 6 Dec 2022 04:30:23 +0000
Subject: [PATCH] Add more overflow checks

Signed-off-by: Sebastien GODARD <sysstat@users.noreply.github.com>

Upstream-Status: Backport [http://launchpadlibrarian.net/635991215/sysstat_11.6.1-1ubuntu0.1_11.6.1-1ubuntu0.2.diff.gz]
CVE: CVE-2022-39377
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 common.c    | 14 ++++++--------
 common.h    |  2 +-
 sa_common.c | 10 ++++++++--
 sadc.c      |  6 ++++++
 4 files changed, 21 insertions(+), 11 deletions(-)

diff --git a/common.c b/common.c
index 76f43a8..662e15c 100644
--- a/common.c
+++ b/common.c
@@ -1496,7 +1496,7 @@ int parse_values(char *strargv, unsigned char bitmap[], int max_val, const char
 }
 
 /*
- ***************************************************************************
+ * **************************************************************************
  * Check if the multiplication of the 3 values may be greater than UINT_MAX.
  *
  * IN:
@@ -1505,17 +1505,15 @@ int parse_values(char *strargv, unsigned char bitmap[], int max_val, const char
  * @val3	Third value.
  ***************************************************************************
  */
-void check_overflow(size_t val1, size_t val2, size_t val3)
+void check_overflow(unsigned long long val1, unsigned long long val2,
+                  unsigned long long val3)
 {
-      if ((unsigned long long) val1 *
-          (unsigned long long) val2 *
-          (unsigned long long) val3 > UINT_MAX) {
+      if (val1 * val2 * val3 > UINT_MAX) {
 #ifdef DEBUG
               fprintf(stderr, "%s: Overflow detected (%llu). Aborting...\n",
-                      __FUNCTION__,
-                      (unsigned long long) val1 * (unsigned long long) val2 *	(unsigned long long) val3);
+                      __FUNCTION__, val1 * val2 * val3);
 #endif
       exit(4);
-      }
+              }
 }
 
diff --git a/common.h b/common.h
index 60ebf4d..0d579a1 100644
--- a/common.h
+++ b/common.h
@@ -242,7 +242,7 @@ void compute_ext_disk_stats
 	(struct stats_disk *, struct stats_disk *, unsigned long long,
 	 struct ext_disk_stats *);
 void check_overflow
-        (size_t, size_t, size_t);
+        (unsigned long long, unsigned long long, unsigned long long);
 int count_bits
 	(void *, int);
 int count_csvalues
diff --git a/sa_common.c b/sa_common.c
index a11b5fa..ca002de 100644
--- a/sa_common.c
+++ b/sa_common.c
@@ -67,8 +67,9 @@ void allocate_structures(struct activity *act[])
 		if (act[i]->nr > 0) {
 
                         /* Look for a possible overflow */
-                        check_overflow((size_t) act[i]->msize, (size_t) act[i]->nr,
-                                       (size_t) act[i]->nr2);
+                        check_overflow((unsigned long long) act[i]->msize,
+                                       (unsigned long long) act[i]->nr,
+                                       (unsigned long long) act[i]->nr2);
 
 			for (j = 0; j < 3; j++) {
 				SREALLOC(act[i]->buf[j], void,
@@ -1438,6 +1439,11 @@ int reallocate_vol_act_structures(struct activity *act[], unsigned int act_nr,
 
 	act[p]->nr = act_nr;
 
+        /* Look for a possible overflow */
+        check_overflow((unsigned long long) act[p]->msize,
+                       (unsigned long long) act[p]->nr,
+                       (unsigned long long) act[p]->nr2);
+
 	for (j = 0; j < 3; j++) {
 		SREALLOC(act[p]->buf[j], void,
 			 (size_t) act[p]->msize * (size_t) act[p]->nr * (size_t) act[p]->nr2);
diff --git a/sadc.c b/sadc.c
index 7cdbc38..bcef470 100644
--- a/sadc.c
+++ b/sadc.c
@@ -332,6 +332,12 @@ void sa_sys_init(void)
 		}
 
 		if (act[i]->nr > 0) {
+
+                        /* Look for a possible overflow */
+                        check_overflow((unsigned long long) act[i]->msize,
+                                       (unsigned long long) act[i]->nr,
+                                       (unsigned long long) act[i]->nr2);
+
 			/* Allocate structures for current activity */
 			SREALLOC(act[i]->_buf0, void,
 				 (size_t) act[i]->msize * (size_t) act[i]->nr * (size_t) act[i]->nr2);
-- 
2.18.2

