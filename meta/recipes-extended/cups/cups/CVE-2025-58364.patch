From: Thorsten Alteholz <debian@alteholz.de>
Date: Wed, 10 Sep 2025 11:05:30 +0200
Subject: fix remote DoS via null dereference


Upstream-Status: Backport [import from debian https://salsa.debian.org/printing-team/cups/-/blob/debian/bullseye/debian/patches/0028-CVE-2025-58364-fix-remote-DoS-via-null-dereference.patch?ref_type=heads
Upstream commit https://github.com/OpenPrinting/cups/commit/e58cba9d6fceed4242980e51dbd1302cf638ab1d]
CVE: CVE-2025-58364
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 cups/ipp.c | 26 +-------------------------
 1 file changed, 1 insertion(+), 25 deletions(-)

Index: cups-2.3.3op2/cups/ipp.c
===================================================================
--- cups-2.3.3op2.orig/cups/ipp.c	2025-09-10 14:37:43.159185969 +0200
+++ cups-2.3.3op2/cups/ipp.c	2025-09-10 14:38:19.091195224 +0200
@@ -2951,34 +2951,6 @@
 	  */
 
           tag = (ipp_tag_t)buffer[0];
-          if (tag == IPP_TAG_EXTENSION)
-          {
-           /*
-            * Read 32-bit "extension" tag...
-            */
-
-	    if ((*cb)(src, buffer, 4) < 1)
-	    {
-	      DEBUG_puts("1ippReadIO: Callback returned EOF/error");
-	      _cupsBufferRelease((char *)buffer);
-	      return (IPP_STATE_ERROR);
-	    }
-
-	    tag = (ipp_tag_t)((((((buffer[0] << 8) | buffer[1]) << 8) |
-	                        buffer[2]) << 8) | buffer[3]);
-
-            if (tag & IPP_TAG_CUPS_CONST)
-            {
-             /*
-              * Fail if the high bit is set in the tag...
-              */
-
-	      _cupsSetError(IPP_STATUS_ERROR_INTERNAL, _("IPP extension tag larger than 0x7FFFFFFF."), 1);
-	      DEBUG_printf(("1ippReadIO: bad tag 0x%x.", tag));
-	      _cupsBufferRelease((char *)buffer);
-	      return (IPP_STATE_ERROR);
-            }
-          }
 
 	  if (tag == IPP_TAG_END)
 	  {
@@ -3199,6 +3171,7 @@
 
 	    if ((*cb)(src, buffer, (size_t)n) < n)
 	    {
+              _cupsSetError(IPP_STATUS_ERROR_INTERNAL, _("Unable to read IPP attribute name."), 1);
 	      DEBUG_puts("1ippReadIO: unable to read name.");
 	      _cupsBufferRelease((char *)buffer);
 	      return (IPP_STATE_ERROR);
