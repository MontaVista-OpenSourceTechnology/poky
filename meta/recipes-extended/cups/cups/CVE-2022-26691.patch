From de4f8c196106033e4c372dce3e91b9d42b0b9444 Mon Sep 17 00:00:00 2001
From: Zdenek Dohnal <zdohnal@redhat.com>
Date: Thu, 26 May 2022 06:27:04 +0200
Subject: [PATCH] scheduler/cert.c: Fix string comparison (fixes
 CVE-2022-26691)

The previous algorithm didn't expect the strings can have a different
length, so one string can be a substring of the other and such substring
was reported as equal to the longer string.

Upstream-Status: Backport [https://github.com/OpenPrinting/cups/commit/de4f8c196106033e4c372dce3e91b9d42b0b9444 & https://github.com/OpenPrinting/cups/commit/411b6136f450a583ee08c3880fa09dbe837eb3f1]
CVE: CVE-2022-26691
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 scheduler/cert.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/scheduler/cert.c b/scheduler/cert.c
index 0ebd549..84fe36a 100644
--- a/scheduler/cert.c
+++ b/scheduler/cert.c
@@ -444,5 +444,12 @@ ctcompare(const char *a,		/* I - First string */
     b ++;
   }
 
-  return (result);
+  /*
+   * The while loop finishes when *a == '\0' or *b == '\0'
+   * so after the while loop either both *a and *b == '\0',
+   * or one points inside a string, so when we apply bitwise OR on *a,
+   * *b and result, we get a non-zero return value if the compared strings don't match.
+   */
+
+  return (result | *a | *b);
 }
-- 
2.18.2

