From 097df09648d808780568cabeed7e212622698f0c Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Tue, 15 Jul 2025 21:43:01 +0200
Subject: [PATCH 2/2] patch 9.1.1551: [security]: path traversal issue in
 zip.vim

Problem:  [security]: path traversal issue in zip.vim (@ax)
Solution: drop leading ../ on write of zipfiles, don't forcefully
          overwrite existing files

A zip plugin which contains filenames with leading '../'  may cause
confusion as to where the content will be extracted.  Let's drop such
things and make sure we use a relative filename instead and don't
forcefully overwrite temporary files. Also, warn the user of such
things.

related: #17733

Signed-off-by: Christian Brabandt <cb@256bit.org>

Signed-off-by: Siddharth Doshi <sdoshi@mvista.com>
---
 runtime/autoload/zip.vim | 28 ++++++++++++++++------------
 1 file changed, 16 insertions(+), 12 deletions(-)

diff --git a/runtime/autoload/zip.vim b/runtime/autoload/zip.vim
index e61293c35..6026c6e8f 100644
--- a/runtime/autoload/zip.vim
+++ b/runtime/autoload/zip.vim
@@ -264,6 +264,7 @@ endfun
 " zip#Write: {{{2
 fun! zip#Write(fname)
 "  call Dfunc("zip#Write(fname<".a:fname.">) zipfile_".winnr()."<".s:zipfile_{winnr()}.">")
+  let need_rename = 0
   let repkeep= &report
   set report=10
 
@@ -271,17 +272,6 @@ fun! zip#Write(fname)
   if !executable(substitute(g:zip_zipcmd,'\s\+.*$','',''))
    redraw!
    echohl Error | echo "***error*** (zip#Write) sorry, your system doesn't appear to have the ".g:zip_zipcmd." program" | echohl None
-"   call inputsave()|call input("Press <cr> to continue")|call inputrestore()
-   let &report= repkeep
-"   call Dret("zip#Write")
-   return
-  endif
-  if !exists("*mkdir")
-   redraw!
-   echohl Error | echo "***error*** (zip#Write) sorry, mkdir() doesn't work on your system" | echohl None
-"   call inputsave()|call input("Press <cr> to continue")|call inputrestore()
-   let &report= repkeep
-"   call Dret("zip#Write")
    return
   endif
 
@@ -317,6 +307,11 @@ fun! zip#Write(fname)
    let zipfile = substitute(a:fname,'^.\{-}zipfile://\(.\{-}\)::[^\\].*$','\1','')
    let fname   = substitute(a:fname,'^.\{-}zipfile://.\{-}::\([^\\].*\)$','\1','')
   endif
+  if fname =~ '^[.]\{1,2}/'
+    call system(g:zip_zipcmd." -d ".s:Escape(fnamemodify(zipfile,":p"),0)." ".s:Escape(fname,0))
+    let fname = fname->substitute('^\([.]\{1,2}/\)\+', '', 'g')
+    let need_rename = 1
+  endif
 "  call Decho("zipfile<".zipfile.">")
 "  call Decho("fname  <".fname.">")
 
@@ -333,7 +328,8 @@ fun! zip#Write(fname)
   endif
 "  call Decho("zipfile<".zipfile."> fname<".fname.">")
 
-  exe "w! ".fnameescape(fname)
+  " don't overwrite files forcefully
+  exe "w ".fnameescape(fname)
   if has("win32unix") && executable("cygpath")
    let zipfile = substitute(system("cygpath ".s:Escape(zipfile,0)),'\n','','e')
   endif
@@ -363,6 +359,10 @@ fun! zip#Write(fname)
    let &binary = binkeep
    q!
    unlet s:zipfile_{winnr()}
+  elseif need_rename
+    exe $"sil keepalt file {fnameescape($"zipfile://{zipfile}::{fname}")}"
+    redraw!
+    echohl WarningMsg | echo "***error*** (zip#Browse) Path Traversal Attack detected, dropping relative path" | echohl None
   endif
   
   " cleanup and restore current directory
@@ -398,6 +398,10 @@ fun! zip#Extract()
    let &report= repkeep
 "   call Dret("zip#Extract")
    return
+  elseif fname =~ '^[.]\?[.]/'
+    redraw!
+    echohl Error | echo "***error*** (zip#Browse) Path Traversal Attack detected, not extracting!" | echohl None
+    return
   endif
 
   " extract the file mentioned under the cursor
-- 
2.24.4

