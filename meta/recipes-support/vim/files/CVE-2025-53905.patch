From 652fa1a3a9f443b7442916d7ad12ed61341a0252 Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Tue, 15 Jul 2025 21:54:00 +0200
Subject: [PATCH 1/2] patch 9.1.1552: [security]: path traversal issue in
 tar.vim

Problem:  [security]: path traversal issue in tar.vim
          (@ax)
Solution: warn the user for such things, drop leading /, don't
          forcefully overwrite files when writing temporary files,
          refactor autoload/tar.vim

tar.vim: drop leading / in path names

A tar archive containing files with leading `/` may cause confusions as
to where the content is extracted.  Let's make sure we drop the leading
`/` and use a relative path instead.

Also while at it, had to refactor it quite a bit and increase the
minimum supported Vim version to v9. Also add a test for some basic tar
functionality

closes: #17733

Signed-off-by: Siddharth Doshi <sdoshi@mvista.com>
---
 runtime/autoload/tar.vim     | 147 +++++++++++++++++------------------
 runtime/plugin/tarPlugin.vim |   8 +-
 2 files changed, 75 insertions(+), 80 deletions(-)

diff --git a/runtime/autoload/tar.vim b/runtime/autoload/tar.vim
index adfc10c92..d95af3da8 100644
--- a/runtime/autoload/tar.vim
+++ b/runtime/autoload/tar.vim
@@ -37,10 +37,10 @@ set cpo&vim
 " ---------------------------------------------------------------------
 "  Default Settings: {{{1
 if !exists("g:tar_browseoptions")
- let g:tar_browseoptions= "Ptf"
+ let g:tar_browseoptions= "tf"
 endif
 if !exists("g:tar_readoptions")
- let g:tar_readoptions= "OPxf"
+ let g:tar_readoptions= "Oxf"
 endif
 if !exists("g:tar_cmd")
  let g:tar_cmd= "tar"
@@ -98,10 +98,26 @@ if !exists("g:tar_shq")
 " call Decho("g:tar_shq<".g:tar_shq.">")
 endif
 
+let g:tar_secure=' -- '
+let g:tar_leading_pat='^\%([.]\{,2\}/\)\+'
+
 " ----------------
 "  Functions: {{{1
 " ----------------
 
+" ---------------------------------------------------------------------
+" s:Msg: {{{2
+fun! s:Msg(func, severity, msg)
+  redraw!
+  if a:severity =~? 'error'
+    echohl Error 
+  else
+    echohl WarningMsg
+  endif
+  echo $"***{a:severity}*** ({a:func}) {a:msg}"
+  echohl None
+endfunc
+
 " ---------------------------------------------------------------------
 " tar#Browse: {{{2
 fun! tar#Browse(tarfile)
@@ -208,24 +224,15 @@ fun! tar#Browse(tarfile)
 "   call Dret("tar#Browse : a:tarfile<".a:tarfile.">")
    return
   endif
-  "
-  " The following should not be neccessary, since in case of errors the
-  " previous if statement should have caught the problem (because tar exited
-  " with a non-zero exit code).
-  " if line("$") == curlast || ( line("$") == (curlast + 1) &&
-  "       \ getline("$") =~# '\c\<\%(warning\|error\|inappropriate\|unrecognized\)\>' &&
-  "       \ getline("$") =~  '\s' )
-  "  redraw!
-  "  echohl WarningMsg | echo "***warning*** (tar#Browse) ".a:tarfile." doesn't appear to be a tar file" | echohl None
-  "  keepj sil! %d
-  "  let eikeep= &ei
-  "  set ei=BufReadCmd,FileReadCmd
-  "  exe "r ".fnameescape(a:tarfile)
-  "  let &ei= eikeep
-  "  keepj sil! 1d
-  "   call Dret("tar#Browse : a:tarfile<".a:tarfile.">")
-  "  return
-  " endif
+
+  " remove tar: Removing leading '/' from member names
+  " Note: the message could be localized
+  if search('^tar: ') > 0 || search(g:tar_leading_pat) > 0
+    call append(3,'" Note: Path Traversal Attack detected!')
+    let b:leading_slash = 1
+    " remove the message output
+    sil g/^tar: /d
+  endif
 
   " set up maps supported for tar
   setlocal noma nomod ro
@@ -248,12 +255,7 @@ fun! s:TarBrowseSelect()
   let fname= getline(".")
 "  call Decho("fname<".fname.">")
 
-  if !exists("g:tar_secure") && fname =~ '^\s*-\|\s\+-'
-   redraw!
-   echohl WarningMsg | echo '***warning*** (tar#BrowseSelect) rejecting tarfile member<'.fname.'> because of embedded "-"'
-"   call Dret('tar#BrowseSelect : rejecting tarfile member<'.fname.'> because of embedded "-"')
-   return
-  endif
+  let ls= get(b:, 'leading_slash', 0)
 
   " sanity check
   if fname =~ '^"'
@@ -276,7 +278,8 @@ fun! s:TarBrowseSelect()
    wincmd _
   endif
   let s:tblfile_{winnr()}= curfile
-  call tar#Read("tarfile:".tarfile.'::'.fname,1)
+  let b:leading_slash= ls
+  call tar#Read("tarfile:".tarfile.'::'.fname)
   filetype detect
   set nomod
   exe 'com! -buffer -nargs=? -complete=file TarDiff	:call tar#Diff(<q-args>,"'.fnameescape(fname).'")'
@@ -287,7 +290,7 @@ endfun
 
 " ---------------------------------------------------------------------
 " tar#Read: {{{2
-fun! tar#Read(fname,mode)
+fun! tar#Read(fname)
 "  call Dfunc("tar#Read(fname<".a:fname.">,mode=".a:mode.")")
   let repkeep= &report
   set report=10
@@ -323,16 +326,10 @@ fun! tar#Read(fname,mode)
    endif
   endif
 
-  if exists("g:tar_secure")
-   let tar_secure= " -- "
-  else
-   let tar_secure= " "
-  endif
-
   if tarfile =~# '\.bz2$'
-   exe "sil! r! bzip2 -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+   exe "sil! r! bzip2 -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
   elseif tarfile =~# '\.\(gz\)$'
-   exe "sil! r! gzip -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+   exe "sil! r! gzip -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
 
   elseif tarfile =~# '\(\.tgz\|\.tbz\|\.txz\)'
    if has("unix") && executable("file")
@@ -341,28 +338,31 @@ fun! tar#Read(fname,mode)
     let filekind= ""
    endif
    if filekind =~ "bzip2"
-    exe "sil! r! bzip2 -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+    exe "sil! r! bzip2 -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
    elseif filekind =~ "XZ"
-    exe "sil! r! xz -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+    exe "sil! r! xz -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
    elseif filekind =~ "Zstandard"
-    exe "sil! r! zstd --decompress --stdout -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+    exe "sil! r! zstd --decompress --stdout -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
    else
-    exe "sil! r! gzip -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+    exe "sil! r! gzip -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
    endif
 
   elseif tarfile =~# '\.lrp$'
-   exe "sil! r! cat -- ".shellescape(tarfile,1)." | gzip -d -c - | ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+   exe "sil! r! cat -- ".shellescape(tarfile,1)." | gzip -d -c - | ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
   elseif tarfile =~# '\.lzma$'
-   exe "sil! r! lzma -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+   exe "sil! r! lzma -d -c -- ".shellescape(tarfile,1)."| ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
   elseif tarfile =~# '\.\(xz\|txz\)$'
-   exe "sil! r! xz --decompress --stdout -- ".shellescape(tarfile,1)." | ".g:tar_cmd." -".g:tar_readoptions." - ".tar_secure.shellescape(fname,1).decmp
+   exe "sil! r! xz --decompress --stdout -- ".shellescape(tarfile,1)." | ".g:tar_cmd." -".g:tar_readoptions." - ".g:tar_secure.shellescape(fname,1).decmp
   else
    if tarfile =~ '^\s*-'
     " A file name starting with a dash is taken as an option.  Prepend ./ to avoid that.
     let tarfile = substitute(tarfile, '-', './-', '')
    endif
 "   call Decho("8: exe silent r! ".g:tar_cmd." -".g:tar_readoptions.tar_secure.shellescape(tarfile,1)." ".shellescape(fname,1).decmp)
-   exe "silent r! ".g:tar_cmd." -".g:tar_readoptions.shellescape(tarfile,1)." ".tar_secure.shellescape(fname,1).decmp
+   exe "silent r! ".g:tar_cmd." -".g:tar_readoptions.shellescape(tarfile,1)." ".g:tar_secure.shellescape(fname,1).decmp
+  endif
+  if get(b:, 'leading_slash', 0)
+    sil g/^tar: /d
   endif
 
   if doro
@@ -371,13 +371,13 @@ fun! tar#Read(fname,mode)
   endif
 
   let b:tarfile= a:fname
-  exe "file tarfile::".fnameescape(fname)
 
   " cleanup
   keepj sil! 0d
   set nomod
 
   let &report= repkeep
+  silent exe "file tarfile::". fname->fnameescape()
 "  call Dret("tar#Read : b:tarfile<".b:tarfile.">")
 endfun
 
@@ -388,13 +388,6 @@ fun! tar#Write(fname)
   let repkeep= &report
   set report=10
 
-  if !exists("g:tar_secure") && a:fname =~ '^\s*-\|\s\+-'
-   redraw!
-   echohl WarningMsg | echo '***warning*** (tar#Write) rejecting tarfile member<'.a:fname.'> because of embedded "-"'
-"   call Dret('tar#Write : rejecting tarfile member<'.fname.'> because of embedded "-"')
-   return
-  endif
-
   " sanity checks
   if !executable(g:tar_cmd)
    redraw!
@@ -445,6 +438,26 @@ fun! tar#Write(fname)
   let tarfile = substitute(b:tarfile,'tarfile:\(.\{-}\)::.*$','\1','')
   let fname   = substitute(b:tarfile,'tarfile:.\{-}::\(.*\)$','\1','')
 
+  if get(b:, 'leading_slash', 0)
+   call s:Msg('tar#Write', 'error', $"sorry, not attempting to update {tarfile} with {fname}")
+   let &report= repkeep
+   return
+  endif
+
+  if !isdirectory(fnameescape(tmpdir))
+    call mkdir(fnameescape(tmpdir), 'p')
+  endif
+  exe $"lcd {fnameescape(tmpdir)}"
+  if isdirectory("_ZIPVIM_")
+    call s:Rmdir("_ZIPVIM_")
+  endif
+  call mkdir("_ZIPVIM_")
+  lcd _ZIPVIM_
+  let dir = fnamemodify(fname, ':p:h')
+  if dir !~# '_ZIPVIM_$'
+    call mkdir(dir)
+  endif
+
   " handle compressed archives
   if tarfile =~# '\.bz2'
    call system("bzip2 -d -- ".shellescape(tarfile,0))
@@ -503,19 +516,15 @@ fun! tar#Write(fname)
    endif
 "   call Decho("tarfile<".tarfile."> fname<".fname.">")
  
-   if exists("g:tar_secure")
-    let tar_secure= " -- "
-   else
-    let tar_secure= " "
-   endif
-   exe "w! ".fnameescape(fname)
+   " don't overwrite a file forcefully
+   exe "w ".fnameescape(fname)
    if has("win32unix") && executable("cygpath")
     let tarfile = substitute(system("cygpath ".shellescape(tarfile,0)),'\n','','e')
    endif
  
    " delete old file from tarfile
 "   call Decho("system(".g:tar_cmd." ".g:tar_delfile." ".shellescape(tarfile,0)." -- ".shellescape(fname,0).")")
-   call system(g:tar_cmd." ".g:tar_delfile." ".shellescape(tarfile,0).tar_secure.shellescape(fname,0))
+   call system(g:tar_cmd." ".g:tar_delfile." ".shellescape(tarfile,0).g:tar_secure.shellescape(fname,0))
    if v:shell_error != 0
     redraw!
 "    call Decho("***error*** (tar#Write) sorry, unable to update ".fnameescape(tarfile)." with ".fnameescape(fname))
@@ -524,7 +533,7 @@ fun! tar#Write(fname)
  
     " update tarfile with new file 
 "    call Decho(g:tar_cmd." -".g:tar_writeoptions." ".shellescape(tarfile,0).tar_secure.shellescape(fname,0))
-    call system(g:tar_cmd." -".g:tar_writeoptions." ".shellescape(tarfile,0).tar_secure.shellescape(fname,0))
+    call system(g:tar_cmd." -".g:tar_writeoptions." ".shellescape(tarfile,0).g:tar_secure.shellescape(fname,0))
     if v:shell_error != 0
      redraw!
 "     call Decho("***error*** (tar#Write) sorry, unable to update ".fnameescape(tarfile)." with ".fnameescape(fname))
@@ -574,6 +583,7 @@ fun! tar#Diff(userfname,fname)
   if a:userfname != ""
    let fname= a:userfname
   endif
+  exe "lcd ".fnameescape(b:tmpdir). '/_ZIPVIM_'
   if filereadable(fname)
    " sets current file (from tarball) for diff'ing
    " splits window vertically
@@ -600,13 +610,6 @@ fun! tar#Extract()
   let fname= getline(".")
 "  call Decho("fname<".fname.">")
 
-  if !exists("g:tar_secure") && fname =~ '^\s*-\|\s\+-'
-   redraw!
-   echohl WarningMsg | echo '***warning*** (tar#BrowseSelect) rejecting tarfile member<'.fname.'> because of embedded "-"'
-"   call Dret('tar#BrowseSelect : rejecting tarfile member<'.fname.'> because of embedded "-"')
-   return
-  endif
-
   " sanity check
   if fname =~ '^"'
    let &report= repkeep
@@ -729,15 +732,7 @@ endfun
 " s:Rmdir: {{{2
 fun! s:Rmdir(fname)
 "  call Dfunc("Rmdir(fname<".a:fname.">)")
-  if has("unix")
-   call system("/bin/rm -rf -- ".shellescape(a:fname,0))
-  elseif has("win32") || has("win95") || has("win64") || has("win16")
-   if &shell =~? "sh$"
-    call system("/bin/rm -rf -- ".shellescape(a:fname,0))
-   else
-    call system("del /S ".shellescape(a:fname,0))
-   endif
-  endif
+  call delete(a:fname, 'rf')
 "  call Dret("Rmdir")
 endfun
 
diff --git a/runtime/plugin/tarPlugin.vim b/runtime/plugin/tarPlugin.vim
index d55492a93..cb95f6e16 100644
--- a/runtime/plugin/tarPlugin.vim
+++ b/runtime/plugin/tarPlugin.vim
@@ -22,14 +22,14 @@ set cpo&vim
 "  Public Interface: {{{1
 augroup tar
   au!
-  au BufReadCmd   tarfile::*	call tar#Read(expand("<amatch>"), 1)
-  au FileReadCmd  tarfile::*	call tar#Read(expand("<amatch>"), 0)
+  au BufReadCmd   tarfile::*	call tar#Read(expand("<amatch>"))
+  au FileReadCmd  tarfile::*	call tar#Read(expand("<amatch>"))
   au BufWriteCmd  tarfile::*	call tar#Write(expand("<amatch>"))
   au FileWriteCmd tarfile::*	call tar#Write(expand("<amatch>"))
 
   if has("unix")
-   au BufReadCmd   tarfile::*/*	call tar#Read(expand("<amatch>"), 1)
-   au FileReadCmd  tarfile::*/*	call tar#Read(expand("<amatch>"), 0)
+   au BufReadCmd   tarfile::*/*	call tar#Read(expand("<amatch>"))
+   au FileReadCmd  tarfile::*/*	call tar#Read(expand("<amatch>"))
    au BufWriteCmd  tarfile::*/*	call tar#Write(expand("<amatch>"))
    au FileWriteCmd tarfile::*/*	call tar#Write(expand("<amatch>"))
   endif
-- 
2.24.4

