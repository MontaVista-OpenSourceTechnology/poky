From 6d02e1429771c00046b48f26e53ca4123c3ce4e1 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Fri, 24 Sep 2021 16:01:09 +0800
Subject: [PATCH] patch 8.2.3428: using freed memory when replacing

Problem:    Using freed memory when replacing. (Dhiraj Mishra)
Solution:   Get the line pointer after calling ins_copychar().

Upstream-Status: Backport [https://github.com/vim/vim/commit/35a9a00afcb20897d462a766793ff45534810dc3]
CVE: CVE-2021-3796

Signed-off-by: Minjae Kim  <flowergom@gmail.com>
---
 src/normal.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/src/normal.c b/src/normal.c
index c4963e621..305b514bc 100644
--- a/src/normal.c
+++ b/src/normal.c
@@ -5009,19 +5009,23 @@ nv_replace(cmdarg_T *cap)
           {
               /*
                * Get ptr again, because u_save and/or showmatch() will have
-               * released the line.  At the same time we let know that the
-               * line will be changed.
+               * released the line. This may also happen in ins_copychar().
+               * At the same time we let know that the line will be changed.
                */
-              ptr = ml_get_buf(curbuf, curwin->w_cursor.lnum, TRUE);
               if (cap->nchar == Ctrl_E || cap->nchar == Ctrl_Y)
               {
                 int c = ins_copychar(curwin->w_cursor.lnum
                                          + (cap->nchar == Ctrl_Y ? -1 : 1));
+
+                ptr = ml_get_buf(curbuf, curwin->w_cursor.lnum, TRUE);
                 if (c != NUL)
                   ptr[curwin->w_cursor.col] = c;
               }
               else
+              {
+                  ptr = ml_get_buf(curbuf, curwin->w_cursor.lnum, TRUE);
                   ptr[curwin->w_cursor.col] = cap->nchar;
+              }
               if (p_sm && msg_silent == 0)
                   showmatch(cap->nchar);
               ++curwin->w_cursor.col;
-- 
2.17.1

