commit 608829769cbc247679ffe98841109fc73875e573 
Author: Daiki Ueno <ueno@gnu.org> 
Date:   Mon Jul 7 10:44:12 2025 +0900

    x509: avoid double free when exporting othernames in SAN

    Previously, the _gnutls_write_new_othername function, called by
    gnutls_x509_ext_export_subject_alt_names to export "otherName" in a
    certificate's SAN extension, freed the caller allocated ASN.1
    structure upon error, resulting in a potential double-free.

    Reported by OpenAI Security Research Team.

    Signed-off-by: Daiki Ueno <ueno@gnu.org>

Upstream-Status: Backport from [https://gitlab.com/gnutls/gnutls/-/commit/608829769cbc247679ffe98841109fc73875e573]
CVE: CVE-2025-32988
---
 NEWS                  | 4 ++++
 lib/x509/extensions.c | 2 --
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/NEWS b/NEWS
index 3e981e1..6c3200c 100644
--- a/NEWS
+++ b/NEWS
@@ -7,6 +7,10 @@ See the end for copying conditions.
 
 * Version 3.6.14 (released 2020-06-03)
 
+** libgnutls: Fix double-free upon error when exporting otherName in SAN
+   Reported by OpenAI Security Research Team. [GNUTLS-SA-2025-07-07-2,
+   CVSS: low] [CVE-2025-32988]
+
 ** certtool: Fix 1-byte write buffer overrun when parsing template
    Reported by David Aitel. [GNUTLS-SA-2025-07-07-3,
    CVSS: low] [CVE-2025-32990]
diff --git a/lib/x509/extensions.c b/lib/x509/extensions.c
index c9fef21..c0acdf9 100644
--- a/lib/x509/extensions.c
+++ b/lib/x509/extensions.c
@@ -805,7 +805,6 @@ _gnutls_write_new_othername(ASN1_TYPE ext, const char *ext_name,
 	result = asn1_write_value(ext, name2, oid, 1);
 	if (result != ASN1_SUCCESS) {
 		gnutls_assert();
-		asn1_delete_structure(&ext);
 		return _gnutls_asn2err(result);
 	}
 
@@ -814,7 +813,6 @@ _gnutls_write_new_othername(ASN1_TYPE ext, const char *ext_name,
 	result = asn1_write_value(ext, name2, data, data_size);
 	if (result != ASN1_SUCCESS) {
 		gnutls_assert();
-		asn1_delete_structure(&ext);
 		return _gnutls_asn2err(result);
 	}
 
-- 
2.34.1

