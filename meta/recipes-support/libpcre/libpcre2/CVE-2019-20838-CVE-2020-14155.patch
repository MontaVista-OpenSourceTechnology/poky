From 8f322d198ba55afa8387cef6f5d115d243eb4520 Mon Sep 17 00:00:00 2001
From: Vivek Kumbhar <vkumbhar@mvista.com>
Date: Mon, 12 Dec 2022 07:31:22 +0000
Subject: [PATCH] CVE-2019-20838-CVE-2020-14155

---
 ChangeLog          | 16 ++++++++++++++++
 pcre_jit_compile.c |  2 +-
 pcre_jit_test.c    |  4 ++++
 3 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/ChangeLog b/ChangeLog
index 590a754..e7597e6 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,16 @@
+Change Log for PCRE
+--------------------
+
+Version 10.33-RC1 15-September-2018
+-----------------------------------
+1. Added "allvector" to pcre2test to make it easy to check the part of the 
+ovector that shouldn't be changed, in particular after substitute and failed or 
+partial matches.
+
+2. Fix subject buffer overread in JIT when UTF is disabled and \X or \R has
+a greater than 1 fixed quantifier. This issue was found by Yunho Kim.
+
+
 ChangeLog for PCRE
 ------------------
 
@@ -50,6 +63,9 @@ with namespace pcrecpp (Bugzilla #2084).
 13. Fix returned offsets from regexec() when REG_STARTEND is used with a
 starting offset greater than zero.
 
+2. Fix subject buffer overread in JIT when UTF is disabled and \X or \R has
+a greater than 1 fixed quantifier. This issue was found by Yunho Kim.
+
 
 Version 8.40 11-January-2017
 ----------------------------
diff --git a/pcre_jit_compile.c b/pcre_jit_compile.c
index 249edbe..40295e5 100644
--- a/pcre_jit_compile.c
+++ b/pcre_jit_compile.c
@@ -8835,7 +8835,7 @@ if (exact > 1)
 #ifdef SUPPORT_UTF
       && !common->utf
 #endif
-      )
+      && type != OP_ANYNL && type != OP_EXTUNI)
     {
     OP2(SLJIT_ADD, TMP1, 0, STR_PTR, 0, SLJIT_IMM, IN_UCHARS(exact));
     add_jump(compiler, &backtrack->topbacktracks, CMP(SLJIT_GREATER, TMP1, 0, STR_END, 0));
diff --git a/pcre_jit_test.c b/pcre_jit_test.c
index 034cb52..64d487a 100644
--- a/pcre_jit_test.c
+++ b/pcre_jit_test.c
@@ -848,6 +848,10 @@ static struct regression_test_case regression_test_cases[] = {
 	{ MA, 0 | F_NOMATCH, "(?:a+?)+?b", "aaaaaaaaaaaaaaaaaaaaaaaa b" },
 	{ MA, 0 | F_NOMATCH, "(?:a*)*b", "aaaaaaaaaaaaaaaaaaaaaaaa b" },
 	{ MA, 0 | F_NOMATCH, "(?:a*?)*?b", "aaaaaaaaaaaaaaaaaaaaaaaa b" },
+	
+	/* These two are not invalid UTF tests, but this infrastructure fits better for them. */
+	{ 0, PCRE2_JIT_COMPLETE, 0, 0, 1, -1, -1, { "\\X{2}", NULL }, "\r\n\n" },
+	{ 0, PCRE2_JIT_COMPLETE, 0, 0, 1, -1, -1, { "\\R{2}", NULL }, "\r\n\n" },
 
 	{ 0, 0, NULL, NULL }
 };
-- 
2.18.2

