From 3c91ea89f26802cb7eafa89173e1604008f49a6b Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Mon, 3 Oct 2022 10:15:38 +0000
Subject: [PATCH] url: check SSH config match on connection reuse

CVE-2022-27782

Reported-by: Harry Sintonen
Bug: https://curl.se/docs/CVE-2022-27782.html
Closes #8825

Upstream-Status: Backport from https://github.com/curl/curl/commit/1645e9b44505abd5cbaf65da5282c3f33b5924a5
CVE: CVE-2022-27782
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 lib/ssh.h |  4 ++--
 lib/url.c | 11 +++++++++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/lib/ssh.h b/lib/ssh.h
index 1c13550..fd63223 100644
--- a/lib/ssh.h
+++ b/lib/ssh.h
@@ -117,8 +117,8 @@ struct ssh_conn {
 
   /* common */
   const char *passphrase;     /* pass-phrase to use */
-  char *rsa_pub;              /* path name */
-  char *rsa;                  /* path name */
+  char *rsa_pub;              /* strdup'ed public key file */
+  char *rsa;                  /* strdup'ed private key file */
   bool authed;                /* the connection has been authenticated fine */
   sshstate state;             /* always use ssh.c:state() to change state! */
   sshstate nextstate;         /* the state to goto after stopping */
diff --git a/lib/url.c b/lib/url.c
index 96981ec..8b4b3d6 100644
--- a/lib/url.c
+++ b/lib/url.c
@@ -1031,6 +1031,12 @@ static size_t max_pipeline_length(struct Curl_multi *multi)
 }
 
 
+static bool ssh_config_matches(struct connectdata *one,
+                               struct connectdata *two)
+{
+  return (Curl_safecmp(one->proto.sshc.rsa, two->proto.sshc.rsa) &&
+          Curl_safecmp(one->proto.sshc.rsa_pub, two->proto.sshc.rsa_pub));
+}
 /*
  * Given one filled in connection struct (named needle), this function should
  * detect if there already is one that has all the significant details
@@ -1300,6 +1306,11 @@ ConnectionExists(struct Curl_easy *data,
         }
       }
 
+      if(needle->handler->protocol & (CURLPROTO_SCP|CURLPROTO_SFTP)) {
+        if(!ssh_config_matches(needle, check))
+          continue;
+      }
+
       if(!needle->bits.httpproxy || (needle->handler->flags&PROTOPT_SSL) ||
          needle->bits.tunnel_proxy) {
         /* The requested connection does not use a HTTP proxy or it uses SSL or
-- 
2.18.2

