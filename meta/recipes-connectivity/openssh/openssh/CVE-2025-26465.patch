From 0832aac79517611dd4de93ad0a83577994d9c907 Mon Sep 17 00:00:00 2001
From: "djm@openbsd.org" <djm@openbsd.org>
Date: Tue, 18 Feb 2025 08:02:48 +0000
Subject: [PATCH] upstream: Fix cases where error codes were not correctly set

Reported by the Qualys Security Advisory team. ok markus@

OpenBSD-Commit-ID: 7bcd4ffe0fa1e27ff98d451fb9c22f5fae6e610d
---
 krl.c           | 4 +++-
 ssh-agent.c     | 7 ++++++-
 ssh-sk-client.c | 4 +++-
 sshconnect2.c   | 7 +++++--
 sshsig.c        | 3 ++-
 5 files changed, 19 insertions(+), 6 deletions(-)

This fixes CVE-2025-26465.

Signed-off-by: Javier Campos <jcampos@mvista.com>

Index: openssh-7.5p1/krl.c
===================================================================
--- openssh-7.5p1.orig/krl.c
+++ openssh-7.5p1/krl.c
@@ -647,6 +647,7 @@ revoked_certs_generate(struct revoked_ce
 			break;
 		case KRL_SECTION_CERT_SERIAL_BITMAP:
 			if (rs->lo - bitmap_start > INT_MAX) {
+				r = SSH_ERR_INVALID_FORMAT;
 				error("%s: insane bitmap gap", __func__);
 				goto out;
 			}
@@ -947,6 +948,7 @@ ssh_krl_from_blob(struct sshbuf *buf, st
 		goto out;
 
 	if ((krl = ssh_krl_init()) == NULL) {
+		r = SSH_ERR_ALLOC_FAIL;
 		error("%s: alloc failed", __func__);
 		goto out;
 	}
Index: openssh-7.5p1/sshconnect2.c
===================================================================
--- openssh-7.5p1.orig/sshconnect2.c
+++ openssh-7.5p1/sshconnect2.c
@@ -95,7 +95,7 @@ struct sockaddr *xxx_hostaddr;
 static int
 verify_host_key_callback(Key *hostkey, struct ssh *ssh)
 {
-	if (verify_host_key(xxx_host, xxx_hostaddr, hostkey) == -1)
+	if (verify_host_key(xxx_host, xxx_hostaddr, hostkey) != 0)
 		fatal("Host key verification failed.");
 	return 0;
 }
@@ -616,6 +616,7 @@ input_userauth_pk_ok(int type, u_int32_t
 	u_int alen, blen;
 	char *pkalg, *fp;
 	u_char *pkblob;
+	int ret = 0;
 
 	if (authctxt == NULL)
 		fatal("input_userauth_pk_ok: no authentication context");
@@ -637,6 +638,7 @@ input_userauth_pk_ok(int type, u_int32_t
 
 	if ((pktype = key_type_from_name(pkalg)) == KEY_UNSPEC) {
 		debug("unknown pkalg %s", pkalg);
+		ret = SSH_ERR_INVALID_FORMAT;
 		goto done;
 	}
 	if ((key = key_from_blob(pkblob, blen)) == NULL) {
@@ -647,6 +649,7 @@ input_userauth_pk_ok(int type, u_int32_t
 		error("input_userauth_pk_ok: type mismatch "
 		    "for decoded key (received %d, expected %d)",
 		    key->type, pktype);
+		ret = SSH_ERR_INVALID_FORMAT;
 		goto done;
 	}
 	if ((fp = sshkey_fingerprint(key, options.fingerprint_hash,
@@ -675,7 +678,7 @@ done:
 	/* try another method if we did not send a packet */
 	if (sent == 0)
 		userauth(authctxt, NULL);
-	return 0;
+	return ret;
 }
 
 #ifdef GSSAPI
