From bafc329b5c7a33eda5657e0910bab35d2cc9b84a Mon Sep 17 00:00:00 2001
From: "djm@openbsd.org" <djm@openbsd.org>
Date: Fri, 7 Dec 2018 03:39:40 +0000
Subject: [PATCH] upstream: only consider the ext-info-c extension during the
 initial

KEX. It shouldn't be sent in subsequent ones, but if it is present we should
ignore it.

This prevents sshd from sending a SSH_MSG_EXT_INFO for REKEX for buggy
these clients. Reported by Jakub Jelen via bz2929; ok dtucker@

OpenBSD-Commit-ID: 91564118547f7807030ec537480303e2371902f9

Upstream-Status: Backport [https://github.com/openssh/openssh-portable/commit/a6a0788cbbe8dfce2819ee43b09c80725742e21c]
CVE: CVE-2023-48795
Signed-off-by: Priyal Doshi <pdoshi@mvista.com>
---
 kex.c | 4 +++-
 kex.h | 1 +
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/kex.c b/kex.c
index cf4ac0d..6a13ebd 100644
--- a/kex.c
+++ b/kex.c
@@ -436,6 +436,7 @@ kex_input_newkeys(int type, u_int32_t seq, void *ctxt)
 	if ((r = ssh_set_newkeys(ssh, MODE_IN)) != 0)
 		return r;
 	kex->done = 1;
+	kex->flags &= ~KEX_INITIAL;
 	sshbuf_reset(kex->peer);
 	/* sshbuf_reset(kex->my); */
 	kex->flags &= ~KEX_INIT_SENT;
@@ -544,6 +545,7 @@ kex_new(struct ssh *ssh, char *proposal[PROPOSAL_MAX], struct kex **kexp)
 	if ((r = kex_prop2buf(kex->my, proposal)) != 0)
 		goto out;
 	kex->done = 0;
+	kex->flags = KEX_INITIAL;
 	kex_reset_dispatch(ssh);
 	ssh_dispatch_set(ssh, SSH2_MSG_KEXINIT, &kex_input_kexinit);
 	r = 0;
@@ -794,7 +796,7 @@ kex_choose_conf(struct ssh *ssh)
 	}
 
 	/* Check whether client supports ext_info_c */
-	if (kex->server) {
+	if (kex->server && (kex->flags & KEX_INITIAL)) {
 		char *ext;
 
 		ext = match_list("ext-info-c", peer[PROPOSAL_KEX_ALGS], NULL);
diff --git a/kex.h b/kex.h
index 3794f21..fe5fab5 100644
--- a/kex.h
+++ b/kex.h
@@ -103,6 +103,7 @@ enum kex_exchange {
 };
 
 #define KEX_INIT_SENT	0x0001
+#define KEX_INITIAL	0x0002
 
 struct sshenc {
 	char	*name;
-- 
2.34.1

