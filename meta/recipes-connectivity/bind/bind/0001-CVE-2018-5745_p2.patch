From 7997668515b3ae8a96ab7d88ff2c866b2ec938f7 Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Mon, 12 Sep 2022 13:17:02 +0000
Subject: [PATCH] CVE-2018-5745_p2


Update keyfetch_done compute_tag check

If in keyfetch_done the compute_tag fails (because for example the
algorithm is not supported), don't crash, but instead ignore the
key.

Upstream-Status: Backport from https://gitlab.isc.org/isc-projects/bind9/-/commit/f09352d20a9d360e50683cd1d2fc52ccedcd77a0
CVE: CVE-2018-5745
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 lib/dns/include/dst/dst.h |  3 +--
 lib/dns/zone.c            | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/lib/dns/include/dst/dst.h b/lib/dns/include/dst/dst.h
index c2ff306..423d8b1 100644
--- a/lib/dns/include/dst/dst.h
+++ b/lib/dns/include/dst/dst.h
@@ -73,8 +73,7 @@ typedef struct dst_context 	dst_context_t;
 #define DST_ALG_HMACSHA512	165	/* XXXMPA */
 #define DST_ALG_INDIRECT	252
 #define DST_ALG_PRIVATE		254
-#define DST_ALG_EXPAND		255
-#define DST_MAX_ALGS		255
+#define DST_MAX_ALGS		256
 
 /*% A buffer of this size is large enough to hold any key */
 #define DST_KEY_MAXSIZE		1280
diff --git a/lib/dns/zone.c b/lib/dns/zone.c
index ca8bbc8..c314653 100644
--- a/lib/dns/zone.c
+++ b/lib/dns/zone.c
@@ -8870,11 +8870,28 @@ keyfetch_done(isc_task_t *task, isc_event_t *event) {
 	for (result = dns_rdataset_first(&kfetch->keydataset);
 	     result == ISC_R_SUCCESS;
 	     result = dns_rdataset_next(&kfetch->keydataset)) {
+                dns_keytag_t keytag;
+
 		dns_rdata_reset(&keydatarr);
 		dns_rdataset_current(&kfetch->keydataset, &keydatarr);
 		result = dns_rdata_tostruct(&keydatarr, &keydata, NULL);
 		RUNTIME_CHECK(result == ISC_R_SUCCESS);
 
+                dns_keydata_todnskey(&keydata, &dnskey, NULL);
+                result = compute_tag(keyname, &dnskey, mctx, &keytag);
+                if (result != ISC_R_SUCCESS) {
+                        /*
+                         * Skip if we cannot compute the key tag.
+                         * This may happen if the algorithm is unsupported
+                         */
+                        dns_zone_log(zone, ISC_LOG_ERROR,
+                                "Cannot compute tag for key in zone %s: %s "
+                                "(skipping)",
+                                namebuf, dns_result_totext(result));
+                        continue;
+                }
+                RUNTIME_CHECK(result == ISC_R_SUCCESS);
+
 		/*
 		 * If any keydata record has a nonzero add holddown, then
 		 * there was a pre-existing trust anchor for this domain;
@@ -8964,6 +8981,7 @@ keyfetch_done(isc_task_t *task, isc_event_t *event) {
 		isc_boolean_t updatekey = ISC_FALSE;
 		isc_boolean_t deletekey = ISC_FALSE;
 		isc_boolean_t trustkey = ISC_FALSE;
+                dns_keytag_t keytag;
 
 		dns_rdata_reset(&dnskeyrr);
 		dns_rdataset_current(&kfetch->dnskeyset, &dnskeyrr);
@@ -8974,6 +8992,20 @@ keyfetch_done(isc_task_t *task, isc_event_t *event) {
 		if (!ISC_TF(dnskey.flags & DNS_KEYFLAG_KSK))
 			continue;
 
+                result = compute_tag(keyname, &dnskey, mctx, &keytag);
+                if (result != ISC_R_SUCCESS) {
+                        /*
+                         * Skip if we cannot compute the key tag.
+                         * This may happen if the algorithm is unsupported
+                         */
+                        dns_zone_log(zone, ISC_LOG_ERROR,
+                                "Cannot compute tag for key in zone %s: %s "
+                                "(skipping)",
+                                namebuf, dns_result_totext(result));
+                        continue;
+                }
+                RUNTIME_CHECK(result == ISC_R_SUCCESS);
+
 		revoked = ISC_TF(dnskey.flags & DNS_KEYFLAG_REVOKE);
 
 		if (matchkey(&kfetch->keydataset, &dnskeyrr)) {
-- 
2.18.2

