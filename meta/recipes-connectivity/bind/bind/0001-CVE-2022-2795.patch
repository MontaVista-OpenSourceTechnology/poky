From 72ae67d5d0695508cc0358cabbec6f67271bfaec Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Fri, 7 Oct 2022 07:10:37 +0000
Subject: [PATCH] Bound the amount of work performed for delegations

Limit the amount of database lookups that can be triggered in
fctx_getaddresses() (i.e. when determining the name server addresses to
query next) by setting a hard limit on the number of NS RRs processed
for any delegation encountered.  Without any limit in place, named can
be forced to perform large amounts of database lookups per each query
received, which severely impacts resolver performance.

The limit used (20) is an arbitrary value that is considered to be big
enough for any sane DNS delegation.

(cherry picked from commit 3a44097fd6c6c260765b628cd1d2c9cb7efb0b2a)

Upstream-Status: Backport from https://gitlab.isc.org/isc-projects/bind9/-/commit/bf2ea6d8525bfd96a84dad221ba9e004adb710a8
CVE: CVE-2022-2795
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 lib/dns/resolver.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/lib/dns/resolver.c b/lib/dns/resolver.c
index a1483b5..63f7416 100644
--- a/lib/dns/resolver.c
+++ b/lib/dns/resolver.c
@@ -185,6 +185,12 @@
  */
 #define NS_FAIL_LIMIT 4
 #define NS_RR_LIMIT   5
+/*
+ * IP address lookups are performed for at most NS_PROCESSING_LIMIT NS RRs in
+ * any NS RRset encountered, to avoid excessive resource use while processing
+ * large delegations.
+ */
+#define NS_PROCESSING_LIMIT 20
 
 /* Number of hash buckets for zone counters */
 #ifndef RES_DOMAIN_BUCKETS
@@ -3147,6 +3153,7 @@ fctx_getaddresses(fetchctx_t *fctx, isc_boolean_t badcache) {
 	isc_boolean_t all_spilled = ISC_TRUE;
 #endif /* ENABLE_FETCHLIMIT */
 	unsigned int no_addresses = 0;
+        unsigned int ns_processed = 0;
 
 	FCTXTRACE5("getaddresses", "fctx->depth=", fctx->depth);
 
@@ -3326,6 +3333,11 @@ fctx_getaddresses(fetchctx_t *fctx, isc_boolean_t badcache) {
 
 		dns_rdata_reset(&rdata);
 		dns_rdata_freestruct(&ns);
+
+                if (++ns_processed >= NS_PROCESSING_LIMIT) {
+                        result = ISC_R_NOMORE;
+                        break;
+                }
 	}
 	if (result != ISC_R_NOMORE)
 		return (result);
-- 
2.18.2

