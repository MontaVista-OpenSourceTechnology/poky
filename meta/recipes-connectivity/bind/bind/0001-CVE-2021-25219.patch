From 3cf75680dbdb803da388433a487d3a3c30196e25 Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Thu, 4 Aug 2022 07:00:06 +0000
Subject: [PATCH] CVE-2021-25219

Disable lame-ttl cache
Enable lame response detection even with disabled lame cache

Upstream-Status: Backport from https://gitlab.isc.org/isc-projects/bind9/-/commit/8fe18c0566c41228a568157287f5a44f96d37662 & https://gitlab.isc.org/isc-projects/bind9/-/commit/e4931584a34bdd0a0d18e4d918fb853bf5296787
CVE: CVE-2021-25219
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 bin/named/config.c |  2 +-
 bin/named/server.c |  8 ++++++--
 lib/dns/resolver.c | 18 ++++++++++--------
 3 files changed, 17 insertions(+), 11 deletions(-)

diff --git a/bin/named/config.c b/bin/named/config.c
index 8f5c7f1..1ba73ef 100644
--- a/bin/named/config.c
+++ b/bin/named/config.c
@@ -152,7 +152,7 @@ options {\n\
 	notify-source-v6 *;\n\
 	cleaning-interval 0;  /* now meaningless */\n\
 	min-roots 2;\n\
-	lame-ttl 600;\n\
+	lame-ttl 0;\n\
 	max-ncache-ttl 10800; /* 3 hours */\n\
 	max-cache-ttl 604800; /* 1 week */\n\
 	transfer-format many-answers;\n\
diff --git a/bin/named/server.c b/bin/named/server.c
index 57ec84f..cbea310 100644
--- a/bin/named/server.c
+++ b/bin/named/server.c
@@ -3156,8 +3156,12 @@ configure_view(dns_view_t *view, dns_viewlist_t *viewlist,
 	result = ns_config_get(maps, "lame-ttl", &obj);
 	INSIST(result == ISC_R_SUCCESS);
 	lame_ttl = cfg_obj_asuint32(obj);
-	if (lame_ttl > 1800)
-		lame_ttl = 1800;
+        if (lame_ttl > 0) {
+                cfg_obj_log(obj, ns_g_lctx, ISC_LOG_WARNING,
+                            "disabling lame cache despite lame-ttl > 0 as it "
+                            "may cause performance issues");
+                lame_ttl = 0;
+        }
 	dns_resolver_setlamettl(view->resolver, lame_ttl);
 
 	/*
diff --git a/lib/dns/resolver.c b/lib/dns/resolver.c
index f2a52b0..c6b6690 100644
--- a/lib/dns/resolver.c
+++ b/lib/dns/resolver.c
@@ -8089,18 +8089,20 @@ resquery_response(isc_task_t *task, isc_event_t *event) {
 	/*
 	 * Is the server lame?
 	 */
-	if (res->lame_ttl != 0 && !ISFORWARDER(query->addrinfo) &&
-	    is_lame(fctx)) {
+        if (!ISFORWARDER(query->addrinfo) && is_lame(fctx)) {
 		inc_stats(res, dns_resstatscounter_lame);
 		log_lame(fctx, query->addrinfo);
-		result = dns_adb_marklame(fctx->adb, query->addrinfo,
+                if (fctx->res->lame_ttl != 0) {
+                        result = dns_adb_marklame(fctx->adb, query->addrinfo,
 					  &fctx->name, fctx->type,
 					  now + res->lame_ttl);
-		if (result != ISC_R_SUCCESS)
-			isc_log_write(dns_lctx, DNS_LOGCATEGORY_RESOLVER,
-				      DNS_LOGMODULE_RESOLVER, ISC_LOG_ERROR,
-				      "could not mark server as lame: %s",
-				      isc_result_totext(result));
+                        if (result != ISC_R_SUCCESS) {
+                                isc_log_write(dns_lctx, DNS_LOGCATEGORY_RESOLVER,
+                                              DNS_LOGMODULE_RESOLVER, ISC_LOG_ERROR,
+                                              "could not mark server as lame: %s",
+                                              isc_result_totext(result));
+                        }
+                }
 		broken_server = DNS_R_LAME;
 		keep_trying = ISC_TRUE;
 		FCTXTRACE("lame server");
-- 
2.18.2

