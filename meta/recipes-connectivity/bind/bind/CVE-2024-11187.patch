From a1982cf1bb95c818aa7b58988b5611dec80f2408 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ond=C5=99ej=20Sur=C3=BD?= <ondrej@isc.org>
Date: Thu, 14 Nov 2024 10:37:29 +0100
Subject: [PATCH] Limit the additional processing for large RDATA sets

Limit the number of records appended to ADDITIONAL section to the names
that have less than 14 records in the RDATA.  This limits the number
of the lookups into the database(s) during single client query.

Also don't append any additional data to ANY queries.  The answer to ANY
is already big enough.
---
 lib/dns/include/dns/rdataset.h | 10 +++++++++-
 lib/dns/qpzone.c               |  2 +-
 lib/dns/rdataset.c             |  7 ++++++-
 lib/dns/resolver.c             | 17 ++++++++++-------
 lib/ns/query.c                 |  5 +++--
 5 files changed, 29 insertions(+), 12 deletions(-)

This fixes CVE-2024-11187.

Signed-off-by: Javier Campos <jcampos@mvista.com>

Index: bind-9.10.5-P3/bin/named/query.c
===================================================================
--- bind-9.10.5-P3.orig/bin/named/query.c
+++ bind-9.10.5-P3/bin/named/query.c
@@ -1655,9 +1655,10 @@ query_addadditional(void *arg, dns_name_
 		 * section, it's helpful if we add the SRV additional data
 		 * as well.
 		 */
-		eresult = dns_rdataset_additionaldata(trdataset,
-						      query_addadditional,
-						      client);
+		eresult = dns_rdataset_additionaldata2(trdataset,
+						       query_addadditional,
+						       client,
+						       DNS_RDATASET_MAXADDITIONAL);
 	}
 
  cleanup:
@@ -2238,7 +2239,7 @@ query_addrdataset(ns_client_t *client, d
 						       rdataset->rdclass);
 	rdataset->attributes |= DNS_RDATASETATTR_LOADORDER;
 
-	if (NOADDITIONAL(client))
+	if (NOADDITIONAL(client) || client->query.qtype == dns_rdatatype_any)
 		return;
 
 	/*
@@ -2248,8 +2249,9 @@ query_addrdataset(ns_client_t *client, d
 	 */
 	additionalctx.client = client;
 	additionalctx.rdataset = rdataset;
-	(void)dns_rdataset_additionaldata(rdataset, query_addadditional2,
-					  &additionalctx);
+	(void)dns_rdataset_additionaldata2(rdataset, query_addadditional2,
+					   &additionalctx,
+					   DNS_RDATASET_MAXADDITIONAL);
 	CTRACE(ISC_LOG_DEBUG(3), "query_addrdataset: done");
 }
 
Index: bind-9.10.5-P3/bin/tests/system/additional/tests.sh
===================================================================
--- bind-9.10.5-P3.orig/bin/tests/system/additional/tests.sh
+++ bind-9.10.5-P3/bin/tests/system/additional/tests.sh
@@ -122,7 +122,7 @@ n=`expr $n + 1`
 echo "I:testing with 'minimal-any no;' ($n)"
 ret=0
 $DIG -t ANY www.rt.example @10.53.0.1 -p 5300 > dig.out.$n || ret=1
-grep "ANSWER: 3, AUTHORITY: 1, ADDITIONAL: 2" dig.out.$n > /dev/null || ret=1
+grep "ANSWER: 3, AUTHORITY: 1, ADDITIONAL: 1" dig.out.$n > /dev/null || ret=1
 if [ $ret -eq 1 ] ; then
     echo "I: failed"; status=1
 fi
Index: bind-9.10.5-P3/lib/dns/include/dns/rdataset.h
===================================================================
--- bind-9.10.5-P3.orig/lib/dns/include/dns/rdataset.h
+++ bind-9.10.5-P3/lib/dns/include/dns/rdataset.h
@@ -58,6 +58,8 @@
 #include <dns/types.h>
 #include <dns/rdatastruct.h>
 
+#define DNS_RDATASET_MAXADDITIONAL 13
+
 ISC_LANG_BEGINDECLS
 
 typedef enum {
@@ -492,14 +494,24 @@ dns_rdataset_additionaldata(dns_rdataset
  *\li	If a call to dns_rdata_additionaldata() is not successful, the
  *	result returned will be the result of dns_rdataset_additionaldata().
  *
+ *\li	If 'limit' is non-zero and the number of the rdatasets is larger
+ *	than 'limit', no additional data will be processed.
+ *
  * Returns:
  *
  *\li	#ISC_R_SUCCESS
  *
+ *\li	#DNS_R_TOOMANYRECORDS in case rdataset count is larger than 'limit'
+ *
  *\li	Any error that dns_rdata_additionaldata() can return.
  */
 
 isc_result_t
+dns_rdataset_additionaldata2(dns_rdataset_t	   *rdataset,
+			     dns_additionaldatafunc_t add, void *arg,
+			     size_t limit);
+
+isc_result_t
 dns_rdataset_getnoqname(dns_rdataset_t *rdataset, dns_name_t *name,
 			dns_rdataset_t *neg, dns_rdataset_t *negsig);
 /*%<
Index: bind-9.10.5-P3/lib/dns/rdataset.c
===================================================================
--- bind-9.10.5-P3.orig/lib/dns/rdataset.c
+++ bind-9.10.5-P3/lib/dns/rdataset.c
@@ -31,6 +31,7 @@
 #include <dns/ncache.h>
 #include <dns/rdata.h>
 #include <dns/rdataset.h>
+#include <dns/result.h>
 #include <dns/compress.h>
 
 static const char *trustnames[] = {
@@ -604,6 +605,13 @@ isc_result_t
 dns_rdataset_additionaldata(dns_rdataset_t *rdataset,
 			    dns_additionaldatafunc_t add, void *arg)
 {
+	return dns_rdataset_additionaldata2(rdataset, add, arg, 0);
+}
+
+isc_result_t
+dns_rdataset_additionaldata2(dns_rdataset_t *rdataset,
+			    dns_additionaldatafunc_t add, void *arg, size_t limit)
+{
 	dns_rdata_t rdata = DNS_RDATA_INIT;
 	isc_result_t result;
 
@@ -615,6 +623,10 @@ dns_rdataset_additionaldata(dns_rdataset
 	REQUIRE(DNS_RDATASET_VALID(rdataset));
 	REQUIRE((rdataset->attributes & DNS_RDATASETATTR_QUESTION) == 0);
 
+	if (limit != 0 && dns_rdataset_count(rdataset) > limit) {
+		return DNS_R_TOOMANYRECORDS;
+	}
+
 	result = dns_rdataset_first(rdataset);
 	if (result != ISC_R_SUCCESS)
 		return (result);
