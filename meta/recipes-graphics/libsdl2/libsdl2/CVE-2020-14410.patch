From 1f65bfe9bd2212716706502c8dfe9b5a1f711666 Mon Sep 17 00:00:00 2001
From: Hitendra Prajapati <hprajapati@mvista.com>
Date: Thu, 4 Aug 2022 12:46:02 +0530
Subject: [PATCH] CVE-2020-14410

Upstream-Status: Backport [https://security-tracker.debian.org/tracker/CVE-2020-14410]
CVE: CVE-2020-14410
Signed-off-by: Hitendra Prajapati <hprajapati@mvista.com>
---
 include/SDL_stdinc.h     |  2 ++
 src/video/SDL_pixels.c   |  6 +++---
 src/video/SDL_pixels_c.h |  2 +-
 src/video/SDL_surface.c  | 12 +++++++++++-
 4 files changed, 17 insertions(+), 5 deletions(-)

diff --git a/include/SDL_stdinc.h b/include/SDL_stdinc.h
index fdf9641..ee1c6e8 100644
--- a/include/SDL_stdinc.h
+++ b/include/SDL_stdinc.h
@@ -152,6 +152,8 @@ typedef uint16_t Uint16;
 /**
  * \brief A signed 32-bit integer type.
  */
+#define SDL_MAX_SINT32  ((Sint32)0x7FFFFFFF)    /* 2147483647 */
+#define SDL_MIN_SINT32  ((Sint32)(~0x7FFFFFFF)) /* -2147483648 */
 typedef int32_t Sint32;
 /**
  * \brief An unsigned 32-bit integer type.
diff --git a/src/video/SDL_pixels.c b/src/video/SDL_pixels.c
index d905656..6df7f36 100644
--- a/src/video/SDL_pixels.c
+++ b/src/video/SDL_pixels.c
@@ -744,13 +744,13 @@ SDL_DitherColors(SDL_Color * colors, int bpp)
 /*
  * Calculate the pad-aligned scanline width of a surface
  */
-int
+Sint64
 SDL_CalculatePitch(SDL_Surface * surface)
 {
-    int pitch;
+    Sint64 pitch;
 
     /* Surface should be 4-byte aligned for speed */
-    pitch = surface->w * surface->format->BytesPerPixel;
+    pitch = (Sint64)surface->w * surface->format->BytesPerPixel;
     switch (surface->format->BitsPerPixel) {
     case 1:
         pitch = (pitch + 7) / 8;
diff --git a/src/video/SDL_pixels_c.h b/src/video/SDL_pixels_c.h
index 4ee91b8..c8a00d5 100644
--- a/src/video/SDL_pixels_c.h
+++ b/src/video/SDL_pixels_c.h
@@ -34,7 +34,7 @@ extern int SDL_MapSurface(SDL_Surface * src, SDL_Surface * dst);
 extern void SDL_FreeBlitMap(SDL_BlitMap * map);
 
 /* Miscellaneous functions */
-extern int SDL_CalculatePitch(SDL_Surface * surface);
+extern Sint64 SDL_CalculatePitch(SDL_Surface * surface);
 extern void SDL_DitherColors(SDL_Color * colors, int bpp);
 extern Uint8 SDL_FindColor(SDL_Palette * pal, Uint8 r, Uint8 g, Uint8 b, Uint8 a);
 
diff --git a/src/video/SDL_surface.c b/src/video/SDL_surface.c
index 9d52e5c..27e841c 100644
--- a/src/video/SDL_surface.c
+++ b/src/video/SDL_surface.c
@@ -36,6 +36,7 @@ SDL_Surface *
 SDL_CreateRGBSurfaceWithFormat(Uint32 flags, int width, int height, int depth,
                                Uint32 format)
 {
+    Sint64 pitch;
     SDL_Surface *surface;
 
     /* The flags are no longer used, make the compiler happy */
@@ -53,9 +54,18 @@ SDL_CreateRGBSurfaceWithFormat(Uint32 flags, int width, int height, int depth,
         SDL_FreeSurface(surface);
         return NULL;
     }
+
     surface->w = width;
     surface->h = height;
-    surface->pitch = SDL_CalculatePitch(surface);
+
+    pitch = SDL_CalculatePitch(surface);
+    if (pitch < 0 || pitch > SDL_MAX_SINT32) {
+        /* Overflow... */
+        SDL_OutOfMemory();
+        return NULL;
+    }
+    surface->pitch = (int)pitch;
+
     SDL_SetClipRect(surface, NULL);
 
     if (SDL_ISPIXELFORMAT_INDEXED(surface->format->format)) {
-- 
2.25.1

