From 9ff427eab77fe5ade67622b919b9e52280707d34 Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Mon, 26 Sep 2022 12:05:17 +0000
Subject: [PATCH] CVE-2022-40674

Ensure raw tagnames are safe exiting internalEntityParser

It is possible to concoct a situation in which parsing is
suspended while substituting in an internal entity, so that
XML_ResumeParser directly uses internalEntityProcessor as
its processor.  If the subsequent parse includes some unclosed
tags, this will return without calling storeRawNames to ensure
that the raw versions of the tag names are stored in memory other
than the parse buffer itself.  If the parse buffer is then changed
or reallocated (for example if processing a file line by line),
badness will ensue.

This patch ensures storeRawNames is always called when needed
after calling doContent.  The earlier call do doContent does
not need the same protection; it only deals with entity
substitution, which cannot leave unbalanced tags, and in any
case the raw names will be pointing into the stored entity
value not the parse buffer.

Upstream-Status: Backport from https://github.com/libexpat/libexpat/commit/4a32da87e931ba54393d465bb77c40b5c33d343b
CVE: CVE-2022-40674
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 lib/xmlparse.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/lib/xmlparse.c b/lib/xmlparse.c
index 0e5863e..7c2ac61 100644
--- a/lib/xmlparse.c
+++ b/lib/xmlparse.c
@@ -5660,8 +5660,14 @@ internalEntityProcessor(XML_Parser parser,
   {
     processor = contentProcessor;
     /* see externalEntityContentProcessor vs contentProcessor */
-    return doContent(parser, parentParser ? 1 : 0, encoding, s, end,
-                     nextPtr, (XML_Bool)!ps_finalBuffer);
+    result = doContent(parser, parentParser ? 1 : 0,
+                       encoding, s, end, nextPtr,
+                       (XML_Bool)! ps_finalBuffer);
+    if (result == XML_ERROR_NONE) {
+      if (! storeRawNames(parser))
+        return XML_ERROR_NO_MEMORY;
+    }
+    return result;
   }
 }
 
-- 
2.18.2

