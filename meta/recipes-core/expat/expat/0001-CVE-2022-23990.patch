From 03cecaaa56d1b971010e807dbb50261ba5b6ceae Mon Sep 17 00:00:00 2001
From: Vijay Anusuri <vanusuri@mvista.com>
Date: Thu, 3 Feb 2022 09:45:58 +0000
Subject: [PATCH] CVE-2022-23990

expat: integer overflow in the doProlog function

Upstream-Status: Backport
CVE: CVE-2022-23990
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>

---
 Changes        |  6 ++++++
 lib/xmlparse.c | 10 ++++++++--
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/Changes b/Changes
index 147f482..83cec11 100644
--- a/Changes
+++ b/Changes
@@ -6,6 +6,11 @@ Release 2.2.3 Wed August 2 2017
         Security fixes:
              #82  CVE-2017-11742 -- Windows: Fix DLL hijacking vulnerability
                     using Steve Holme's LoadLibrary wrapper for/of cURL
+             #551 CVE-2022-23990 -- Fix unsigned integer overflow in function
+                    doProlog triggered by large content in element type
+                    declarations when there is an element declaration handler
+                    present (from a prior call to XML_SetElementDeclHandler).
+                    Impact is denial of service or more.
 
         Bug fixes:
              #85  Fix a dangling pointer issue related to realloc
@@ -36,6 +41,7 @@ Release 2.2.3 Wed August 2 2017
             Joe Orton
             Pascal Cuoq
             Rhodri James
+            Roland Illig
             Simon McVittie
             Vadim Zeitlin
             Viktor Szakats
diff --git a/lib/xmlparse.c b/lib/xmlparse.c
index 725e95c..2b2f96e 100644
--- a/lib/xmlparse.c
+++ b/lib/xmlparse.c
@@ -5210,7 +5210,7 @@ doProlog(XML_Parser parser,
       if (dtd->in_eldecl) {
         ELEMENT_TYPE *el;
         const XML_Char *name;
-        int nameLen;
+        size_t nameLen;
         const char *nxt = (quant == XML_CQUANT_NONE
                            ? next
                            : next - enc->minBytesPerChar);
@@ -5226,7 +5226,13 @@ doProlog(XML_Parser parser,
         dtd->scaffold[myindex].name = name;
         nameLen = 0;
         for (; name[nameLen++]; );
-        dtd->contentStringLen +=  nameLen;
+
+        /* Detect and prevent integer overflow */
+        if (nameLen > UINT_MAX - dtd->contentStringLen) {
+          return XML_ERROR_NO_MEMORY;
+        }
+
+        dtd->contentStringLen += (unsigned)nameLen;
         if (elementDeclHandler)
           handleDefault = XML_FALSE;
       }
-- 
2.18.2

