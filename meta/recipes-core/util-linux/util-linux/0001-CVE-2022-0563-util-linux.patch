From 869094e2a2c5bb8cf40c96cf509d9c53d6529223 Mon Sep 17 00:00:00 2001
From: vivek kumbhar <vkumbhar@mvista.com>
Date: Tue, 22 Mar 2022 14:11:17 +0000
Subject: [PATCH] CVE-2022-0563 util-linux

---
 login-utils/Makemodule.am |  2 +-
 login-utils/chfn.c        |  5 -----
 login-utils/chsh.c        | 47 +++++----------------------------------
 3 files changed, 7 insertions(+), 47 deletions(-)

diff --git a/login-utils/Makemodule.am b/login-utils/Makemodule.am
index aafbea3..29f8512 100644
--- a/login-utils/Makemodule.am
+++ b/login-utils/Makemodule.am
@@ -82,7 +82,7 @@ chfn_chsh_sources = \
 	login-utils/ch-common.c
 chfn_chsh_cflags = $(SUID_CFLAGS) $(AM_CFLAGS)
 chfn_chsh_ldflags = $(SUID_LDFLAGS) $(AM_LDFLAGS)
-chfn_chsh_ldadd = libcommon.la $(READLINE_LIBS)
+chfn_chsh_ldadd = libcommon.la
 
 if CHFN_CHSH_PASSWORD
 chfn_chsh_ldadd += -lpam
diff --git a/login-utils/chfn.c b/login-utils/chfn.c
index c5312fa..b3dc09c 100644
--- a/login-utils/chfn.c
+++ b/login-utils/chfn.c
@@ -56,11 +56,6 @@
 # include "auth.h"
 #endif
 
-#ifdef HAVE_LIBREADLINE
-# define _FUNCTION_DEF
-# include <readline/readline.h>
-#endif
-
 struct finfo {
 	char *full_name;
 	char *office;
diff --git a/login-utils/chsh.c b/login-utils/chsh.c
index c267c72..5d065f9 100644
--- a/login-utils/chsh.c
+++ b/login-utils/chsh.c
@@ -49,7 +49,6 @@
 # include "selinux_utils.h"
 #endif
 
-
 #ifdef HAVE_LIBUSER
 # include <libuser/user.h>
 # include "libuser.h"
@@ -57,11 +56,6 @@
 # include "auth.h"
 #endif
 
-#ifdef HAVE_LIBREADLINE
-# define _FUNCTION_DEF
-# include <readline/readline.h>
-#endif
-
 struct sinfo {
 	char *username;
 	char *shell;
@@ -120,33 +114,6 @@ static void print_shells(void)
 	endusershell();
 }
 
-#ifdef HAVE_LIBREADLINE
-static char *shell_name_generator(const char *text, int state)
-{
-	static size_t len;
-	char *s;
-
-	if (!state) {
-		setusershell();
-		len = strlen(text);
-	}
-
-	while ((s = getusershell())) {
-		if (strncmp(s, text, len) == 0)
-			return xstrdup(s);
-	}
-	return NULL;
-}
-
-static char **shell_name_completion(const char *text,
-				    int start __attribute__((__unused__)),
-				    int end __attribute__((__unused__)))
-{
-	rl_attempted_completion_over = 1;
-	return rl_completion_matches(text, shell_name_generator);
-}
-#endif
-
 /*
  *  parse_argv () --
  *	parse the command line arguments, and fill in "pinfo" with any
@@ -198,19 +165,17 @@ static char *ask_new_shell(char *question, char *oldshell)
 {
 	int len;
 	char *ans = NULL;
-#ifdef HAVE_LIBREADLINE
-	rl_attempted_completion_function = shell_name_completion;
-#else
 	size_t dummy = 0;
-#endif
+	
 	if (!oldshell)
 		oldshell = "";
 	printf("%s [%s]\n", question, oldshell);
-#ifdef HAVE_LIBREADLINE
-	if ((ans = readline("> ")) == NULL)
-#else
+	
+	putchar(' ');
+	fflush(stdout);
+	
 	if (getline(&ans, &dummy, stdin) < 0)
-#endif
+
 		return NULL;
 	/* remove the newline at the end of ans. */
 	ltrim_whitespace((unsigned char *) ans);
-- 
2.18.2

