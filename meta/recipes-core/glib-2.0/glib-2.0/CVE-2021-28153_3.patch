From: Philip Withnall <pwithnall@endlessos.org>
Date: Tue, 16 Mar 2021 11:36:27 +0000
Subject: glocalfileoutputstream: Tidy up error handling

After the recent reworking of this code it was possible for `g_close()`
to be called on `fd == -1`, which is invalid. It would have reported an
error, were errors not ignored. So it was harmless, but still best to
fix.

Simplify the error handling by combining both error labels and checking
the state of `fd` dynamically.

Coverity CID: #1450834

Signed-off-by: Philip Withnall <pwithnall@endlessos.org>
Bug: https://gitlab.gnome.org/GNOME/glib/-/issues/2325
Bug-Debian: https://bugs.debian.org/984969
Origin: backport, commit:c4b4fecaef5fa6eac63569513511ba6f8674548a
Forwarded: https://gitlab.gnome.org/GNOME/glib/-/merge_requests/2002

Upstream-Status: Backport
CVE:  CVE-2021-28153 patch #3
Signed-off-by: Armin Kuster <akuster@mvista.com>

---
 gio/glocalfileoutputstream.c | 33 +++++++++++++++++----------------
 1 file changed, 17 insertions(+), 16 deletions(-)

Index: glib-2.58.0/gio/glocalfileoutputstream.c
===================================================================
--- glib-2.58.0.orig/gio/glocalfileoutputstream.c
+++ glib-2.58.0/gio/glocalfileoutputstream.c
@@ -828,7 +828,7 @@ handle_overwrite_open (const char    *fi
 		   _("Error when getting information for file “%s”: %s"),
 		   display_name, g_strerror (errsv));
       g_free (display_name);
-      goto err_out;
+      goto error;
     }
   
   /* not a regular file */
@@ -840,7 +840,7 @@ handle_overwrite_open (const char    *fi
                                G_IO_ERROR,
                                G_IO_ERROR_IS_DIRECTORY,
                                _("Target file is a directory"));
-          goto err_out;
+          goto error;
         }
       else if (!is_symlink ||
 #ifdef S_ISLNK
@@ -854,7 +854,7 @@ handle_overwrite_open (const char    *fi
                              G_IO_ERROR,
                              G_IO_ERROR_NOT_REGULAR_FILE,
                              _("Target file is not a regular file"));
-          goto err_out;
+          goto error;
         }
     }
   
@@ -868,7 +868,7 @@ handle_overwrite_open (const char    *fi
                                G_IO_ERROR_WRONG_ETAG,
                                _("The file was externally modified"));
 	  g_free (current_etag);
-	  goto err_out;
+          goto error;
 	}
       g_free (current_etag);
     }
@@ -961,7 +961,7 @@ handle_overwrite_open (const char    *fi
                                G_IO_ERROR_CANT_CREATE_BACKUP,
                                _("Backup file creation failed"));
 	  g_free (backup_filename);
-	  goto err_out;
+          goto error;
 	}
 
       bfd = g_open (backup_filename,
@@ -975,7 +975,7 @@ handle_overwrite_open (const char    *fi
                                G_IO_ERROR_CANT_CREATE_BACKUP,
                                _("Backup file creation failed"));
 	  g_free (backup_filename);
-	  goto err_out;
+          goto error;
 	}
 
       /* If needed, Try to set the group of the backup same as the
@@ -992,7 +992,7 @@ handle_overwrite_open (const char    *fi
 	  g_unlink (backup_filename);
 	  g_close (bfd, NULL);
 	  g_free (backup_filename);
-	  goto err_out;
+          goto error;
 	}
       
       if ((original_stat.st_gid != tmp_statbuf.st_gid)  &&
@@ -1009,7 +1009,7 @@ handle_overwrite_open (const char    *fi
 	      g_unlink (backup_filename);
 	      g_close (bfd, NULL);
 	      g_free (backup_filename);
-	      goto err_out;
+              goto error;
 	    }
 	}
 #endif
@@ -1024,7 +1024,7 @@ handle_overwrite_open (const char    *fi
           g_close (bfd, NULL);
 	  g_free (backup_filename);
 	  
-	  goto err_out;
+          goto error;
 	}
       
       g_close (bfd, NULL);
@@ -1039,7 +1039,7 @@ handle_overwrite_open (const char    *fi
 		       g_io_error_from_errno (errsv),
 		       _("Error seeking in file: %s"),
 		       g_strerror (errsv));
-	  goto err_out;
+          goto error;
 	}
     }
 
@@ -1055,7 +1055,7 @@ handle_overwrite_open (const char    *fi
 		       g_io_error_from_errno (errsv),
 		       _("Error removing old file: %s"),
 		       g_strerror (errsv));
-	  goto err_out2;
+          goto error;
 	}
 
       if (readable)
@@ -1072,7 +1072,7 @@ handle_overwrite_open (const char    *fi
 		       _("Error opening file “%s”: %s"),
 		       display_name, g_strerror (errsv));
 	  g_free (display_name);
-	  goto err_out2;
+          goto error;
 	}
     }
   else
@@ -1090,15 +1090,16 @@ handle_overwrite_open (const char    *fi
 			 g_io_error_from_errno (errsv),
 			 _("Error truncating file: %s"),
 			 g_strerror (errsv));
-	    goto err_out;
+            goto error;
 	  }
     }
     
   return fd;
 
- err_out:
-  g_close (fd, NULL);
- err_out2:
+error:
+  if (fd >= 0)
+    g_close (fd, NULL);
+
   return -1;
 }
 
