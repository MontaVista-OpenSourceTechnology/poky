From 45e8fb003a27ac51a8e1d8770b93bc0025bc1975 Mon Sep 17 00:00:00 2001
From: Andreas Schwab <schwab@linux-m68k.org>
Date: Fri, 25 Jun 2021 15:02:47 +0200
Subject: [PATCH] wordexp: handle overflow in positional parameter number (bug
 28011)

Use strtoul instead of atoi so that overflow can be detected.

Upstream status: Backport
CVE: CVE-2021-35942
Signed-off-by: Sam Kappen <skappen@mvista.com>
---
 posix/wordexp-test.c | 1 +
 posix/wordexp.c      | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/posix/wordexp-test.c b/posix/wordexp-test.c
index 17ae812346..627e6f7614 100644
--- a/posix/wordexp-test.c
+++ b/posix/wordexp-test.c
@@ -201,6 +201,7 @@ struct test_case_struct
     { 0, NULL, "$var", 0, 0, { NULL, }, IFS },
     { 0, NULL, "\"\\n\"", 0, 1, { "\\n", }, IFS },
     { 0, NULL, "", 0, 0, { NULL, }, IFS },
+    { 0, NULL, "${1234567890123456789012}", 0, 0, { NULL, }, IFS },
 
     /* Flags not already covered (testit() has special handling for these) */
     { 0, NULL, "one two", WRDE_DOOFFS, 2, { "one", "two", }, IFS },
diff --git a/posix/wordexp.c b/posix/wordexp.c
index dfc41736e6..13a1bfcac9 100644
--- a/posix/wordexp.c
+++ b/posix/wordexp.c
@@ -1426,7 +1426,7 @@ envsubst:
   /* Is it a numeric parameter? */
   else if (isdigit (env[0]))
     {
-      int n = atoi (env);
+      unsigned long n = strtoul (env, NULL, 10);
 
       if (n >= __libc_argc)
 	/* Substitute NULL. */
-- 
2.18.2

