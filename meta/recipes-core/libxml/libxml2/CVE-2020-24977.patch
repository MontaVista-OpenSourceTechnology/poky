From 8e7c20a1af8776677d7890f30b7a180567701a49 Mon Sep 17 00:00:00 2001
From: Nick Wellnhofer <wellnhofer@aevum.de>
Date: Mon, 3 Aug 2020 17:30:41 +0200
Subject: [PATCH] Fix integer overflow when comparing schema dates

Found by OSS-Fuzz.

Upstream-Status: Backport
CVE: CVE-2020-24977
Signed-off-by: Armin Kuster <akuster@mvista.com>

---
 xmlschemastypes.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

Index: libxml2-2.9.8/xmlschemastypes.c
===================================================================
--- libxml2-2.9.8.orig/xmlschemastypes.c
+++ libxml2-2.9.8/xmlschemastypes.c
@@ -3628,8 +3628,13 @@ xmlSchemaCompareDurations(xmlSchemaValPt
 	minday = 0;
 	maxday = 0;
     } else {
-	maxday = 366 * ((myear + 3) / 4) +
-	         365 * ((myear - 1) % 4);
+        if (myear > LONG_MAX / 366)
+             return -2;
+
+    /* FIXME: This doesn't take leap year exceptions every 100/400 years
+       into account. */
+    maxday = 365 * myear + (myear + 3) / 4;
+    /* FIXME: Needs to be calculated separately */
 	minday = maxday - 1;
     }
 
@@ -4014,6 +4019,14 @@ xmlSchemaCompareDates (xmlSchemaValPtr x
     if ((x == NULL) || (y == NULL))
         return -2;
 
+    if ((x->value.date.year > LONG_MAX / 366) ||
+        (x->value.date.year < LONG_MIN / 366) ||
+        (y->value.date.year > LONG_MAX / 366) ||
+        (y->value.date.year < LONG_MIN / 366)) {
+        /* Possible overflow when converting to days. */
+        return -2;
+    }
+
     if (x->value.date.tz_flag) {
 
         if (!y->value.date.tz_flag) {
